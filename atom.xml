<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Heng</title>
  
  
  <link href="https://7heng.github.io/atom.xml" rel="self"/>
  
  <link href="https://7heng.github.io/"/>
  <updated>2021-04-04T07:58:13.200Z</updated>
  <id>https://7heng.github.io/</id>
  
  <author>
    <name>7heng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC实现CURD操作</title>
    <link href="https://7heng.github.io/2021/04/04/JDBC%E5%AE%9E%E7%8E%B0CURD%E6%93%8D%E4%BD%9C/"/>
    <id>https://7heng.github.io/2021/04/04/JDBC%E5%AE%9E%E7%8E%B0CURD%E6%93%8D%E4%BD%9C/</id>
    <published>2021-04-04T07:41:52.000Z</published>
    <updated>2021-04-04T07:58:13.200Z</updated>
    
    <content type="html"><![CDATA[<h4 id="使用PreparedStatement实现CRUD操作："><a href="#使用PreparedStatement实现CRUD操作：" class="headerlink" title="使用PreparedStatement实现CRUD操作："></a>使用PreparedStatement实现CRUD操作：</h4><p><strong>操作和访问数据库：</strong></p><ul><li><p>数据库连接被用于向数据库服务器发送命令和sql语句，并接受数据库服务器返回的结果。其实一个数据库连接就是一个Socket连接。</p></li><li><p>在java.sql包中有3个接口分别定义了对数据库的调用的不同方式：</p><ul><li>Statement：用于执行静态sql语句并返回它所生成结果的对象。</li><li>PrepartedStatement：SQL语句被预编译并存储在此对象中，可以使用此对象多次高效地执行该语句。</li><li>CallbleStatement：用于执行SQL存储过程。</li></ul><p><img src="/images/JDBC_1/Curd.png"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;使用PreparedStatement实现CRUD操作：&quot;&gt;&lt;a href=&quot;#使用PreparedStatement实现CRUD操作：&quot; class=&quot;headerlink&quot; title=&quot;使用PreparedStatement实现CRUD操作：&quot;&gt;&lt;/a&gt;使用</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JDBC获取数据库连接</title>
    <link href="https://7heng.github.io/2021/04/03/JDBC%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/"/>
    <id>https://7heng.github.io/2021/04/03/JDBC%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</id>
    <published>2021-04-03T13:11:58.000Z</published>
    <updated>2021-04-04T07:10:23.209Z</updated>
    
    <content type="html"><![CDATA[<h6 id="一：Driver接口实现类"><a href="#一：Driver接口实现类" class="headerlink" title="一：Driver接口实现类"></a>一：Driver接口实现类</h6><p><strong>Driver接口介绍：</strong></p><ul><li><p>java.sql.Driver接口时所有JDBC驱动程序需要实现的接口，这个接口是提供给数据库厂商使用的，不同数据库厂商提供不同的实现。</p></li><li><p>在程序中不需要直接去访问实现了Driver接口的类，而是由驱动程序管理器类(java.sql.DriverManager)去调用这些Driver实现。</p><ul><li>Oracle的驱动：Oracle.jdbc.driver.OracleDriver</li><li>mysql的驱动：com.mysql.jdbc.Driver</li></ul></li></ul><h6 id="二：加载与注册JDBC驱动"><a href="#二：加载与注册JDBC驱动" class="headerlink" title="二：加载与注册JDBC驱动"></a>二：加载与注册JDBC驱动</h6><ul><li><p>加载驱动：加载JDBC驱动需要调用Class类的静态方法forName(),向其传递要加载的JDBC驱动的类名</p><ul><li>Class.forName(“com.mysql.jdbc.Driver”);</li></ul></li><li><p>注册驱动：DriverManager类是驱动程序管理器类，负责管理驱动程序</p><ul><li><p><strong>使用DriverManager.registerDriver(com.mysql.jdbc.Driver)来注册驱动</strong></p></li><li><p>通常不用显示调用DriverManager类的registerDriver()方法来注册驱动程序类的实例，因为Driver接口的驱动程序类都包含了静态代码块，在这个静态代码块中，会调用DriverManager.registerDriver()方法来注册自身的一个实例，下图是MySQL的Driver实现类的源码：</p><p><img src="/images/JDBC_1/Driver.png"></p></li></ul></li></ul><h6 id="三：URL"><a href="#三：URL" class="headerlink" title="三：URL"></a>三：URL</h6><ul><li>JDBC URL用于标识一个被注册的驱动程序，驱动程序管理器通过这个URL选择正确的驱动程序，从而建立到数据库的连接。</li><li>JDBC URL的标准由三部分组成，各部分间用冒号分隔。<ul><li><strong>jdbc:子协议：子名称</strong></li><li><strong>协议：</strong>JDBC URL中的协议总是jdbc</li><li><strong>子协议：</strong>子协议用于标识一个数据库驱动程序</li><li><strong>子名称：</strong>一种标识数据库的方法。子名称可以依不同的子协议而变化，用子名称的目的是为了<strong>定位数据库</strong>提供足够的信息，包含主机名(对应服务端的ip地址)，<strong>端口号</strong>，<strong>数据库名</strong>。</li></ul></li></ul><p><img src="/images/JDBC_1/URL.png"></p><ul><li><p>几种常用数据库的JDBC URL</p><p>MySQL的连接URL编写方式：</p><ul><li><p>jdbc:mysql://主机名称:mysql服务端口号/数据库名称？参数=值&amp;参数=值</p></li><li><p>jdbc:mysql://localhost:3306/7heng</p></li><li><p>jdbc:mysql://localhost:3306/7heng?useUnicode=true&amp;characterEncoding=utf8（如果JDBC程序与服务器端的字符集不一致，会导致乱码，那么可以通过参数指定服务器端的字符集）</p></li><li><p>jdbc:mysql://locahost:3306/7heng?user=root&amp;password=7777777</p></li><li><p>Oracle9i的连接URL编写方式：</p><ul><li>jdbc:oracle:thin:@主机名称:oracle服务端口：数据库名称</li><li>jdbc:oracle:thin:@localhost:1521:7heng</li></ul></li><li><p>SQLServer的连接URL编写方式：</p><ul><li>jdbc:sqlserver://主机名称:sqlserver服务端口号:DatabaseName=数据库名称</li><li>jdbc:sqlserver://localhost:1433:DatabaseName=7heng</li></ul></li></ul></li></ul><h6 id="四：用户名和密码："><a href="#四：用户名和密码：" class="headerlink" title="四：用户名和密码："></a>四：用户名和密码：</h6><ul><li>user,password可以用”属性名=属性值”方式告诉数据库。</li><li>可以调用DriverManger类的getConnection()方法建立到数据库的连接。</li></ul><p><strong>数据库连接方式举例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">连接方式一：</span><br><span class="line">@Test</span><br><span class="line">public void testConnectionl()&#123;</span><br><span class="line">try&#123;</span><br><span class="line">&#x2F;&#x2F;1：提供java.sql.Driver接口实现类的对象</span><br><span class="line">Driver driver &#x3D; null;</span><br><span class="line">driver &#x3D; new com.mysql.jdbc.Driver();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2：提供url，指明具体操作的数据</span><br><span class="line">String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3:提供Properties的对象，指明用户名和密码</span><br><span class="line">Properties info &#x3D; new Properties();</span><br><span class="line">info.setProperty(&quot;user&quot;,&quot;root&quot;);</span><br><span class="line">info.setProperty(&quot;password&quot;,&quot;7777777&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;4:调用driver的connect(),获取连接</span><br><span class="line">Connerction conn &#x3D; driver.conner(url.info);</span><br><span class="line"></span><br><span class="line">System.out,println(conn);</span><br><span class="line">&#125;catch(SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">说明：上述代码中显示出现了第三方数据的API</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">连接方式二：</span><br><span class="line">@Test</span><br><span class="line">public void testConnection2()&#123;</span><br><span class="line">​try&#123;</span><br><span class="line">&#x2F;&#x2F;1.实例化Driver</span><br><span class="line">Sting ClassName &#x3D; &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line">Class clazz &#x3D; Class.forName(className);</span><br><span class="line">Driver driver &#x3D; (Driver)clazz.newInstance();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.提供url,指明具体操作的数据</span><br><span class="line">String url &#x3D; &quot;jdbc:&#x2F;&#x2F;mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3。提供url,指明具体操作的数据</span><br><span class="line">Properties info &#x3D; new Properties();</span><br><span class="line">info.setProperty(&quot;user&quot;,&quot;root&quot;);</span><br><span class="line">info.setProperty(&quot;password&quot;,&quot;ccc7&quot;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;4.调用driver的connect().获取连接</span><br><span class="line">Connection conn &#x3D; driver.connect(url,info);</span><br><span class="line">System.out.println(conn);</span><br><span class="line"></span><br><span class="line">&#125;catch(Exception e)&#123;</span><br><span class="line">e,printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">说明：相较于方式一，这里使用反射实例化Driver,不在代码中体现第三方数据库的API,体现了面向接口编程的思想。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">连接方式三：</span><br><span class="line">@Test</span><br><span class="line">public void testConnection3()&#123;</span><br><span class="line">try&#123;</span><br><span class="line">&#x2F;&#x2F;1.数据库连接的4个基本要素：</span><br><span class="line">String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;;</span><br><span class="line">String user &#x3D; &quot;root&quot;;</span><br><span class="line">String password &#x3D; &quot;ccc7&quot;;</span><br><span class="line">String driverName &#x3D; &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.实例化Driver</span><br><span class="line">Class clazz &#x3D; clazz.forName(driverName);</span><br><span class="line">Driver driver &#x3D; (Driver) clazz.newInstance();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3.注册驱动</span><br><span class="line">DriverManager.registerDriver(driver);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;4.获取连接</span><br><span class="line">Connection conn &#x3D; DriverManager.getConnection(url,user,password);</span><br><span class="line">System.out.println(conn);</span><br><span class="line">&#125;catch (Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">说明：使用DriverManager实现数据库的连接，体会获取连接必要的4个基本要素。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">连接方式四：</span><br><span class="line">@Test</span><br><span class="line">public void testConnection4()&#123;</span><br><span class="line">try&#123;</span><br><span class="line">&#x2F;&#x2F; 1.数据库连接的4个基本要素：</span><br><span class="line">String url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test&quot;;</span><br><span class="line">String user &#x3D; &quot;root&quot;;</span><br><span class="line">String passwprd &#x3D; &quot;ccc7&quot;;</span><br><span class="line">String driverName &#x3D; &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 2.加载驱动（①实例化Driver ②注册驱动）</span><br><span class="line">class.forName(driverName);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Driver driver &#x3D; (Driver) clazz.newInstance();</span><br><span class="line">        &#x2F;&#x2F; 3.注册驱动</span><br><span class="line">        &#x2F;&#x2F;DriverManager.registerDriver(driver);</span><br><span class="line">        &#x2F;*</span><br><span class="line">        可以注释掉上述代码的原因，是因为在mysql的Driver类中声明有：</span><br><span class="line">        static &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            DriverManager.registerDriver(new Driver());</span><br><span class="line">            &#125; catch (SQLException var1) &#123;</span><br><span class="line">                throw new RuntimeException(&quot;Can&#39;t register driver!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        *&#x2F;</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 3.获取连接</span><br><span class="line">        Connection conn &#x3D; DriverManager.getConnection(url,user,password);</span><br><span class="line">        System.out.println(conn);    </span><br><span class="line">&#125; catch(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">说明：不必显式的注册驱动了。因为在DriverManager的源码中已经存在静态代码块，实现了驱动的注册。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">连接方式五(完结版!)：</span><br><span class="line">@Test</span><br><span class="line">public void testConnection5() throws Exception&#123;</span><br><span class="line">&#x2F;&#x2F; 1.加载配置文件</span><br><span class="line">InputStream is &#x3D; </span><br><span class="line">ConnectionTest.Class.getClassLoader(). getResourceAsStream(&quot;jdbc.properties&quot;);</span><br><span class="line">Properties pros &#x3D; new Properties();</span><br><span class="line">    pros.load(is);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 2.读取配置信息</span><br><span class="line">    String user &#x3D; pros.getProperty(&quot;user&quot;);</span><br><span class="line">    String password &#x3D; pros.getProperty(&quot;password&quot;);</span><br><span class="line">    String url &#x3D; pros.getProperty(&quot;url&quot;);</span><br><span class="line">    String driverClass &#x3D; pros.getProperty(&quot;driverClass&quot;);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 3.加载驱动</span><br><span class="line">    Class.forName(driverClass);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 4.获取连接</span><br><span class="line">    Connection conn &#x3D; DriverManager.getConnection(url,user,passwprd);</span><br><span class="line">    System.out.println(conn);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">其中，配置文件声明在工程的src目录下：【jdbc.properties】</span><br><span class="line">user&#x3D;root</span><br><span class="line">password&#x3D;abc123</span><br><span class="line">url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;test</span><br><span class="line">driverClass&#x3D;com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">说明：使用配置文件的方式保存配置信息，在代码中加载配置文件。</span><br><span class="line">使用配置文件的好处：</span><br><span class="line">①：实现了代码和数据的分离，如果需要修改配置信息，直接在配置文件中修改，不需要深入代码。</span><br><span class="line">②：如果修改了配置信息，省去重新编译的过程。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;一：Driver接口实现类&quot;&gt;&lt;a href=&quot;#一：Driver接口实现类&quot; class=&quot;headerlink&quot; title=&quot;一：Driver接口实现类&quot;&gt;&lt;/a&gt;一：Driver接口实现类&lt;/h6&gt;&lt;p&gt;&lt;strong&gt;Driver接口介绍：&lt;/stron</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL流程控制</title>
    <link href="https://7heng.github.io/2021/04/03/MySQL%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>https://7heng.github.io/2021/04/03/MySQL%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
    <published>2021-04-03T06:55:23.000Z</published>
    <updated>2021-04-03T07:41:05.928Z</updated>
    
    <content type="html"><![CDATA[<p>流程控制结构：<strong>顺序、分支、循环</strong></p><h6 id="if函数："><a href="#if函数：" class="headerlink" title="if函数："></a>if函数：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if函数：</span><br><span class="line">语法：if(条件，值1，值2)</span><br><span class="line">功能：实现双分支</span><br><span class="line">特点：应用在任何位置</span><br></pre></td></tr></table></figure><h6 id="case语句："><a href="#case语句：" class="headerlink" title="case语句："></a>case语句：</h6><p><strong>特点：可以用在任何位置。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">情况一：类似于switch</span><br><span class="line">case 表达式</span><br><span class="line">when 值1 then 结果1或语句1(如果是语句，需要加分号) </span><br><span class="line">when 值2 then 结果2或语句2(如果是语句，需要加分号)</span><br><span class="line">...</span><br><span class="line">else 结果n或语句n(如果是语句，需要加分号)</span><br><span class="line">end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）</span><br><span class="line"></span><br><span class="line">情况二：类似于多重if</span><br><span class="line">case </span><br><span class="line">when 条件1 then 结果1或语句1(如果是语句，需要加分号) </span><br><span class="line">when 条件2 then 结果2或语句2(如果是语句，需要加分号)</span><br><span class="line">...</span><br><span class="line">else 结果n或语句n(如果是语句，需要加分号)</span><br><span class="line">end 【case】（如果是放在begin end中需要加上case，如果放在select后面不需要）</span><br></pre></td></tr></table></figure><h6 id="if-elseif语句："><a href="#if-elseif语句：" class="headerlink" title="if-elseif语句："></a>if-elseif语句：</h6><p><strong>特点：只能用在begin end中！！</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">if 条件1 then 语句1;</span><br><span class="line">elseif 条件2 then 语句2;</span><br><span class="line">...</span><br><span class="line">else 语句n;</span><br><span class="line">end if;</span><br><span class="line"></span><br><span class="line">功能：类似于多重if</span><br><span class="line">只能应用在begin end 中</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">例1：创建函数，实现传入成绩，如果成绩&gt;90,返回A,如果成绩&gt;80,返回B,如果成绩＞60，返回C，否则返回D。</span><br><span class="line">CREATE FUNCTION test_if(score FLOAT) RETURNS CHAR</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE ch CHAR DEFAULT &#39;A&#39;;</span><br><span class="line">IF score&gt;90 THEN SET ch&#x3D;&#39;A&#39;;</span><br><span class="line">ELSEIF score&gt;80 THEN SET ch&#x3D;&#39;B&#39;;</span><br><span class="line">ELSEIF score&gt;60 THEN SET ch&#x3D;&#39;C&#39;;</span><br><span class="line">ELSE SET ch&#x3D;&#39;D&#39;;</span><br><span class="line">END IF;</span><br><span class="line">RETURN ch;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT test_if(87)$</span><br><span class="line"></span><br><span class="line">例2：创建存储过程，如果工资&lt;2000,则删除，如果5000&gt;工资&gt;2000,则涨工资1000，否则涨工资500</span><br><span class="line">CREATE PROCEDURE test_if_pro(IN sal DOUBLE)</span><br><span class="line">BEGIN</span><br><span class="line">IF sal&lt;2000 THEN DELETE FROM employees WHERE employees.salary&#x3D;sal;</span><br><span class="line">ELSEIF sal&gt;&#x3D;2000 AND sal&lt;5000 THEN UPDATE employees SET salary&#x3D;salary+1000 WHERE employees.&#96;salary&#96;&#x3D;sal;</span><br><span class="line">ELSE UPDATE employees SET salary&#x3D;salary+500 WHERE employees.&#96;salary&#96;&#x3D;sal;</span><br><span class="line">END IF;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_if_pro(2100)$</span><br><span class="line"></span><br><span class="line">例3：创建函数，实现传入成绩，如果成绩&gt;90,返回A，如果成绩&gt;80,返回B，如果成绩&gt;60,返回C，否则返回D</span><br><span class="line">CREATE FUNCTION test_case(score FLOAT) RETURNS CHAR</span><br><span class="line">BEGIN </span><br><span class="line">DECLARE ch CHAR DEFAULT &#39;A&#39;;</span><br><span class="line"></span><br><span class="line">CASE </span><br><span class="line">WHEN score&gt;90 THEN SET ch&#x3D;&#39;A&#39;;</span><br><span class="line">WHEN score&gt;80 THEN SET ch&#x3D;&#39;B&#39;;</span><br><span class="line">WHEN score&gt;60 THEN SET ch&#x3D;&#39;C&#39;;</span><br><span class="line">ELSE SET ch&#x3D;&#39;D&#39;;</span><br><span class="line">END CASE;</span><br><span class="line"></span><br><span class="line">RETURN ch;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT test_case(56)$</span><br></pre></td></tr></table></figure><h6 id="三者比较："><a href="#三者比较：" class="headerlink" title="三者比较："></a>三者比较：</h6><table><thead><tr><th align="center"></th><th align="center">应用场合</th></tr></thead><tbody><tr><td align="center">if函数</td><td align="center">简单双分支（任意位置）</td></tr><tr><td align="center">case结构</td><td align="center">等值判断的多分支（任意位置）</td></tr><tr><td align="center">if结构</td><td align="center">区间判断的多分支（begin end中）</td></tr></tbody></table><h6 id="循环结构："><a href="#循环结构：" class="headerlink" title="循环结构："></a>循环结构：</h6><p>分类：while、loop、repeat</p><h6 id="循环控制："><a href="#循环控制：" class="headerlink" title="循环控制："></a>循环控制：</h6><p>iterate类似于 continue，继续，结束本次循环，继续下一次<br>leave 类似于  break，跳出，结束当前所在的循环</p><h6 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只能放在BEGIN END里面</span><br><span class="line">如果要搭配leave跳转语句，需要使用标签，否则可以不用标签</span><br><span class="line">leave类似于java中的break语句，跳出所在循环！！！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"># while</span><br><span class="line">语法：</span><br><span class="line">【标签】while 循环条件 do</span><br><span class="line">循环体;</span><br><span class="line">end while【标签】;</span><br><span class="line"></span><br><span class="line">类似于java：</span><br><span class="line">while(循环条件)&#123;</span><br><span class="line">循环体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># loop</span><br><span class="line">语法：</span><br><span class="line">【标签】loop</span><br><span class="line">循环体;</span><br><span class="line">end loop【标签】;</span><br><span class="line"></span><br><span class="line">可以用来模拟简单的死循环。</span><br><span class="line"></span><br><span class="line"># repeat</span><br><span class="line">语法：</span><br><span class="line">【标签】repeat</span><br><span class="line">循环体;</span><br><span class="line">while 结束循环的条件</span><br><span class="line">end repeat【标签】;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 没有添加循环控制语句：</span><br><span class="line">例1：批量插入，根据次数插入到admin表中多条记录</span><br><span class="line">DROP PROCEDURE pro_while1$</span><br><span class="line">CREATE PROCEDURE pro_while1(IN insertCount INT)</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE i INT DEFAULT 1;</span><br><span class="line">WHILE i&lt;&#x3D;insertCount DO</span><br><span class="line">INSERT INTO admin(username,&#96;password&#96;) VALUES(CONCAT(&#39;Rose&#39;,i),&#39;666&#39;);</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL pro_while1(100)$</span><br><span class="line"></span><br><span class="line"># 添加leave语句</span><br><span class="line">例：批量插入，根据次数插入到admin表中多条记录，如果次数&gt;20则停止</span><br><span class="line">TRUNCATE TABLE admin$</span><br><span class="line">DROP PROCEDURE test_while1$</span><br><span class="line">CREATE PROCEDURE test_while1(IN insertCount INT)</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE i INT DEFAULT 1;</span><br><span class="line">a:WHILE i&lt;&#x3D;insertCount DO</span><br><span class="line">INSERT INTO admin(username,&#96;password&#96;) VALUES(CONCAT(&#39;xiaohua&#39;,i),&#39;0000&#39;);</span><br><span class="line">IF i&gt;&#x3D;20 THEN LEAVE a;</span><br><span class="line">END IF;</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE a;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_while1(100)$</span><br><span class="line"></span><br><span class="line"># 添加iterate语句</span><br><span class="line">例：批量插入，根据次数插入到admin表中多条记录，只插入偶数次</span><br><span class="line">TRUNCATE TABLE admin$</span><br><span class="line">DROP PROCEDURE test_while1$</span><br><span class="line">CREATE PROCEDURE test_while1(IN insertCount INT)</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE i INT DEFAULT 0;</span><br><span class="line">a:WHILE i&lt;&#x3D;insertCount DO</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">IF MOD(i,2)!&#x3D;0 THEN ITERATE a;</span><br><span class="line">END IF;</span><br><span class="line"></span><br><span class="line">INSERT INTO admin(username,&#96;password&#96;) VALUES(CONCAT(&#39;xiaohua&#39;,i),&#39;0000&#39;);</span><br><span class="line"></span><br><span class="line">END WHILE a;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_while1(100)$</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">已知表stringcontent</span><br><span class="line">其中字段：</span><br><span class="line">id 自增长</span><br><span class="line">content varchar(20)</span><br><span class="line">向该表插入指定个数的，随机的字符串</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS stringcontent;</span><br><span class="line">CREATE TABLE stringcontent(</span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">content VARCHAR(20)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">DELIMITER $</span><br><span class="line">CREATE PROCEDURE test_randstr_insert(IN insertCount INT)</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE i INT DEFAULT 1;</span><br><span class="line">DECLARE str VARCHAR(26) DEFAULT &#39;abcdefghijklmnopqrstuvwxyz&#39;;</span><br><span class="line">DECLARE startIndex INT;#代表初始索引</span><br><span class="line">DECLARE len INT;#代表截取的字符长度</span><br><span class="line">WHILE i&lt;&#x3D;insertcount DO</span><br><span class="line">SET startIndex&#x3D;FLOOR(RAND()*26+1);#代表初始索引，随机范围1-26</span><br><span class="line">SET len&#x3D;FLOOR(RAND()*(20-startIndex+1)+1);#代表截取长度，随机范围1-（20-startIndex+1）</span><br><span class="line">INSERT INTO stringcontent(content) VALUES(SUBSTR(str,startIndex,len));</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_randstr_insert(10)$</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;流程控制结构：&lt;strong&gt;顺序、分支、循环&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;if函数：&quot;&gt;&lt;a href=&quot;#if函数：&quot; class=&quot;headerlink&quot; title=&quot;if函数：&quot;&gt;&lt;/a&gt;if函数：&lt;/h6&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL函数</title>
    <link href="https://7heng.github.io/2021/04/03/MySQL%E5%87%BD%E6%95%B0/"/>
    <id>https://7heng.github.io/2021/04/03/MySQL%E5%87%BD%E6%95%B0/</id>
    <published>2021-04-03T04:30:20.000Z</published>
    <updated>2021-04-03T06:54:44.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h2><p>含义：一组预先编译好的sql语句的集合，理解成批处理语句</p><p>1：提高代码的重用性</p><p>2：简化操作</p><p>3：减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率。</p><h6 id="函数和存储过程的区别："><a href="#函数和存储过程的区别：" class="headerlink" title="函数和存储过程的区别："></a>函数和存储过程的区别：</h6><p>存储过程：可以有0个返回，也可以有多个返回，适合做批量插入、批量更新。</p><p>函数：有且仅有1个返回，适合做处理数据后返回一个结果。</p><h6 id="创建语法："><a href="#创建语法：" class="headerlink" title="创建语法："></a>创建语法：</h6><p><code>CREATE FUNCTION 函数名(参数列表) RETURNS 返回类型</code></p><p><code>BEGIN</code></p><p><code>函数体</code></p><p><code>END</code></p><p>注意：</p><p>1：参数列表包含两部分：</p><p>参数名 参数类型</p><p>2：函数体：肯定会有return语句，如果没有也不会报错</p><p>如果return语句没有放在函数体的最后也不会爆粗，但不建议。</p><p>return值：</p><p>3：函数体中仅有一句话，则可以省略begin end</p><p>4：使用 delimiter语句设置标记结束</p><h6 id="调用语法："><a href="#调用语法：" class="headerlink" title="调用语法："></a>调用语法：</h6><p><code>SELECT 函数名(参数列表)</code></p><h6 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">无参有返回</span><br><span class="line">例1：返回公司的员工个数</span><br><span class="line">CREATE FUNCTION myf1() RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE c INT DEFAULT 0;#定义局部变量</span><br><span class="line">SELECT COUNT(*) INTO c      #赋值</span><br><span class="line">FROM employees;</span><br><span class="line">RETURN c;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT myf1()$</span><br><span class="line"></span><br><span class="line">有参有返回：</span><br><span class="line">2：根据员工名，返回它的工资</span><br><span class="line">CREATE FUNCTION myf2(empName VARCHAR(20)) RETURNS DOUBLE</span><br><span class="line">BEGIN</span><br><span class="line">SET @sal&#x3D;0;#定义用户变量 </span><br><span class="line">SELECT salary INTO @sal   #赋值</span><br><span class="line">FROM employees</span><br><span class="line">WHERE last_name &#x3D; empName;</span><br><span class="line"></span><br><span class="line">RETURN @sal;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT myf2(&#39;k_ing&#39;) $</span><br><span class="line"></span><br><span class="line">3：根据部门名，返回该部门的平均工资</span><br><span class="line">CREATE FUNCTION myf3(deptName VARCHAR(20)) RETURNS DOUBLE</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE sal DOUBLE ;</span><br><span class="line">SELECT AVG(salary) INTO sal</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN departments d ON e.department_id &#x3D; d.department_id</span><br><span class="line">WHERE d.department_name&#x3D;deptName;</span><br><span class="line">RETURN sal;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT myf3(&#39;IT&#39;)</span><br><span class="line"></span><br><span class="line">查看函数：</span><br><span class="line">SHOW CREATE FUNCTION myf3;</span><br><span class="line"></span><br><span class="line">删除函数：</span><br><span class="line">DROP FUNCTION myf3;</span><br><span class="line"></span><br><span class="line">例：创建函数，实现传入两个float，返回二者之和</span><br><span class="line">CREATE FUNCTION test_fun1(num1 FLOAT,num2 FLOAT) RETURNS FLOAT</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE SUM FLOAT DEFAULT 0;</span><br><span class="line">SET SUM&#x3D;num1+num2;</span><br><span class="line">RETURN SUM;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">SELECT test_fun1(1,2)$</span><br></pre></td></tr></table></figure><h6 id="调用函数："><a href="#调用函数：" class="headerlink" title="调用函数："></a>调用函数：</h6><p><code>SELECT 函数名 (实参列表)</code></p><h6 id="函数和存储过程的区别：-1"><a href="#函数和存储过程的区别：-1" class="headerlink" title="函数和存储过程的区别："></a>函数和存储过程的区别：</h6><table><thead><tr><th align="center"></th><th align="center">关键字</th><th align="center">调用语法</th><th align="center">返回值</th><th align="center">应用场景</th></tr></thead><tbody><tr><td align="center">函数</td><td align="center">FUNCTION</td><td align="center">SELECT 函数()</td><td align="center">只能是一个</td><td align="center">一般用于查询结果为一个值并返回时，当有返回值而且仅仅一个</td></tr><tr><td align="center">存储过程</td><td align="center">PROCEDURE</td><td align="center">CALL 存储过程()</td><td align="center">可以有0个或多个</td><td align="center">一般用于更新</td></tr></tbody></table><h6 id="字符函数："><a href="#字符函数：" class="headerlink" title="字符函数："></a>字符函数：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">concat 拼接</span><br><span class="line"></span><br><span class="line">substr 截取子串</span><br><span class="line"></span><br><span class="line">upper 转换成大写</span><br><span class="line"></span><br><span class="line">lower 转换成小写</span><br><span class="line"></span><br><span class="line">trim 去掉前后自定的空格和字符</span><br><span class="line"></span><br><span class="line">ltrim 去掉左边空格</span><br><span class="line"></span><br><span class="line">rtrim 去掉右边空格</span><br><span class="line"></span><br><span class="line">replace 替换</span><br><span class="line"></span><br><span class="line">lpad 左填充</span><br><span class="line"></span><br><span class="line">rpad 右填充</span><br><span class="line"></span><br><span class="line">instr 返回子串第一次出现的索引</span><br><span class="line"></span><br><span class="line">length 获取字节个数</span><br></pre></td></tr></table></figure><h6 id="数组函数："><a href="#数组函数：" class="headerlink" title="数组函数："></a><strong>数组函数：</strong></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">round 四舍五入</span><br><span class="line"></span><br><span class="line">rand 随机数</span><br><span class="line"></span><br><span class="line">ceil 向上取整</span><br><span class="line"></span><br><span class="line">floor 向下取整</span><br><span class="line"></span><br><span class="line">mod 取余()</span><br><span class="line"></span><br><span class="line">truncate 截断</span><br></pre></td></tr></table></figure><h6 id="日期函数："><a href="#日期函数：" class="headerlink" title="日期函数："></a><strong>日期函数：</strong></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">now 当前系统日期+时间</span><br><span class="line"></span><br><span class="line">curdate 当前系统日期</span><br><span class="line"></span><br><span class="line">curtime 当前系统时间</span><br><span class="line"></span><br><span class="line">str_to_date 将字符串转换成日期</span><br><span class="line"></span><br><span class="line">data_format 将日期转换成字符</span><br></pre></td></tr></table></figure><h6 id="分组函数："><a href="#分组函数：" class="headerlink" title="分组函数："></a>分组函数：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sum 求和</span><br><span class="line">max 最大值</span><br><span class="line">min 最小值</span><br><span class="line">avg 平均值</span><br><span class="line">count 计数</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">1：以上五个分组函数都忽略null值，除了count(*)</span><br><span class="line">2：sum和avg一般用于处理数值型。</span><br><span class="line">   max、min、count可以处理任何数据类型</span><br><span class="line">3：都可以搭配distinct使用，用于统计去重后的结果</span><br><span class="line">4：count的参数可以支持(建议使用*)：</span><br><span class="line">字段、*、常量值，一般放1</span><br></pre></td></tr></table></figure><h6 id="流程控制函数："><a href="#流程控制函数：" class="headerlink" title="流程控制函数："></a>流程控制函数：</h6><h6 id="if函数："><a href="#if函数：" class="headerlink" title="if函数："></a>if函数：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF (10&lt;5, &#39;大&#39; , &#39;小&#39;)；</span><br><span class="line"></span><br><span class="line">SELECT last_name,commission_pct,IF(commission_pct IS NULL,&#39;没奖金，呵呵&#39;,&#39;有奖金，嘻嘻&#39;) 备注</span><br><span class="line">FROM employees;</span><br></pre></td></tr></table></figure><h6 id="case函数："><a href="#case函数：" class="headerlink" title="case函数："></a>case函数：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">case函数的使用一：</span><br><span class="line"></span><br><span class="line">case 要判断的字段或表达式</span><br><span class="line">when 常量1 then 要显示的值1或语句1;</span><br><span class="line">when 常量2 then 要显示的值2或语句2;</span><br><span class="line">...</span><br><span class="line">else 要显示的值n或语句n;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">例：查询员工的工资，要求</span><br><span class="line">部门号&#x3D;30，显示的工资为1.1倍</span><br><span class="line">部门号&#x3D;40，显示的工资为1.2倍</span><br><span class="line">部门号&#x3D;50，显示的工资为1.3倍</span><br><span class="line">其他部门，显示的工资为元工资</span><br><span class="line"></span><br><span class="line">SELECT salary 原始工资,department_id,</span><br><span class="line">CASE department_id</span><br><span class="line">WHEN 30 THEN salary*1.1</span><br><span class="line">WHEN 40 THEN salary*1.2</span><br><span class="line">WHEN 50 THEN salary*1.3</span><br><span class="line">ELSE salary</span><br><span class="line">END AS 新工资</span><br><span class="line">FROM employees;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">case函数的使用二：类似于 多重if</span><br><span class="line"></span><br><span class="line">case </span><br><span class="line">when 条件1 then 要显示的值1或语句1</span><br><span class="line">when 条件2 then 要显示的值2或语句2</span><br><span class="line">。。。</span><br><span class="line">else 要显示的值n或语句n</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">例：查询员工的工资的情况</span><br><span class="line">如果工资&gt;20000,显示A级别</span><br><span class="line">如果工资&gt;15000,显示B级别</span><br><span class="line">如果工资&gt;10000,显示C级别</span><br><span class="line">否则，显示D级别</span><br><span class="line"></span><br><span class="line">SELECT salary</span><br><span class="line">CASE</span><br><span class="line">WHEN salary&gt;20000 THEN &#39;A&#39;</span><br><span class="line">WHEN salary&gt;15000 THEN &#39;B&#39;</span><br><span class="line">WHEN salary&gt;10000 THEN &#39;C&#39;</span><br><span class="line">ELSE &#39;D&#39;</span><br><span class="line">END AS 工资级别</span><br><span class="line">FROM emplyees;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;函数：&quot;&gt;&lt;a href=&quot;#函数：&quot; class=&quot;headerlink&quot; title=&quot;函数：&quot;&gt;&lt;/a&gt;函数：&lt;/h2&gt;&lt;p&gt;含义：一组预先编译好的sql语句的集合，理解成批处理语句&lt;/p&gt;
&lt;p&gt;1：提高代码的重用性&lt;/p&gt;
&lt;p&gt;2：简化操作&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL存储过程</title>
    <link href="https://7heng.github.io/2021/04/03/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>https://7heng.github.io/2021/04/03/MySQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</id>
    <published>2021-04-03T01:46:24.000Z</published>
    <updated>2021-04-03T02:31:58.603Z</updated>
    
    <content type="html"><![CDATA[<p><strong>存储过程：</strong></p><p>含义：一组预先编译好的SQL语句的集合，理解或批处理语句。</p><p>1：提高代码的重用性。</p><p>2：简化操作。</p><p>3：减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率。</p><p><strong>分类：</strong></p><p>1、无返回无参<br>2、仅仅带in类型，无返回有参<br>3、仅仅带out类型，有返回无参<br>4、既带in又带out，有返回有参<br>5、带inout，有返回有参<br>注意：in、out、inout都可以在一个存储过程中带多个</p><p><strong>好处：</strong></p><p>1：提高代码的重用性。</p><p>2：简化操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">创建语法：</span><br><span class="line">CREATE PROCEDURE 存储过程名(参数列表)</span><br><span class="line">BEGIN</span><br><span class="line"></span><br><span class="line">​存储过程体(一组合法的SQL语句)</span><br><span class="line"></span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">注意：需要设置新的结束标记</span><br><span class="line">delimiter 新的结束标记</span><br><span class="line">示例：</span><br><span class="line">delimiter $</span><br><span class="line"></span><br><span class="line">CREATE PROCEDURE 存储过程名(IN|OUT|INOUT 参数名  参数类型,...)</span><br><span class="line">BEGIN</span><br><span class="line">sql语句1;</span><br><span class="line">sql语句2;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">调用存储过程：</span><br><span class="line">call 存储过程名(实参列表)</span><br></pre></td></tr></table></figure><p>注意：</p><p>1：参数列表包含三部分：参数模式、参数名、参数类型</p><p>举例：in    stuname     varchar(20）</p><p>参数模式：</p><p>in：该参数可以作为输入，也就是该参数需要调用方法传入值。</p><p>out：该参数可以作为输出，也就是该参数可以作为返回值。</p><p>inout：该参数既可以作为输入又可以作为输出，也就是该参数既需要传入值，又可以返回值。</p><p>2：如果存储过程中仅仅只有一句话，begin end可以省略。</p><p>存储过程体中的每条sql语句的结尾要求必须加分号。</p><p>存储过程的结尾可以使用 delimiter 重新设置。</p><p>语法：<code>delimiter 结束标记</code></p><p>例：<code>delimiter $</code></p><p>调用语法：<code>CALL 存储过程名(实参列表);</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">例1：空参列表，插入到admin表中五条记录。</span><br><span class="line">CREATE PROCEDURE myp1()</span><br><span class="line"></span><br><span class="line">BEGIN</span><br><span class="line">​INSERT INTO admin(username,&#39;password&#39;)</span><br><span class="line"></span><br><span class="line">​VALUES(&#39;xiuyi&#39;,&#39;0000&#39;),(&#39;kenan&#39;,&#39;0000&#39;), (&#39;anshitou&#39;,&#39;0000&#39;),(&#39;you&#39;,&#39;0000&#39;),(&#39;kakaxi&#39;,&#39;0000&#39;);</span><br><span class="line"></span><br><span class="line">END $;</span><br><span class="line"></span><br><span class="line">#调用</span><br><span class="line">CALL mypl()$;</span><br><span class="line"></span><br><span class="line">2：创建带in模式参数的存储过程</span><br><span class="line">创建存储过程实现，根据女神名，查询对应得男神信息。</span><br><span class="line">CREATE PROCEDURE myp2(IN beautyName VARCHAR(20))</span><br><span class="line">BEGIN</span><br><span class="line">SELECT bo.*</span><br><span class="line">FROM boys bo</span><br><span class="line">RIGHT JOIN beauty b ON bo.id &#x3D; b.boyfriend_id</span><br><span class="line">WHERE b.name&#x3D;beautyName;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#调用：</span><br><span class="line">CALL myp2(&#39;贝尔摩德&#39;)$</span><br><span class="line"></span><br><span class="line">3：创建存储过程实现，用户是否登录成功</span><br><span class="line">CREATE PROCEDURE myp4(IN username VARCHAR(20),IN PASSWORD VARCHAR(20))</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE result INT DEFAULT 0;#声明并初始化</span><br><span class="line"></span><br><span class="line">SELECT COUNT(*) INTO result#赋值</span><br><span class="line">FROM admin</span><br><span class="line">WHERE admin.username &#x3D; username</span><br><span class="line">AND admin.password &#x3D; PASSWORD;</span><br><span class="line"></span><br><span class="line">SELECT IF(result&gt;0,&#39;成功&#39;,&#39;失败&#39;);#使用</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#调用</span><br><span class="line">CALL myp3(&#39;秀一&#39;,&#39;8888&#39;)$</span><br><span class="line"></span><br><span class="line">4：创建out 模式参数的存储过程</span><br><span class="line">根据输入的女神名，返回对应的男神名</span><br><span class="line">CREATE PROCEDURE myp6(IN beautyName VARCHAR(20),OUT boyName VARCHAR(20))</span><br><span class="line">BEGIN</span><br><span class="line">SELECT bo.boyname INTO boyname</span><br><span class="line">FROM boys bo</span><br><span class="line">RIGHT JOIN</span><br><span class="line">beauty b ON b.boyfriend_id &#x3D; bo.id</span><br><span class="line">WHERE b.name&#x3D;beautyName ;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">5：根据输入的女神名，返回对应的男神名和魅力值</span><br><span class="line">CREATE PROCEDURE myp7(IN beautyName VARCHAR(20),OUT boyName VARCHAR(20),OUT usercp INT) </span><br><span class="line">BEGIN</span><br><span class="line">SELECT boys.boyname ,boys.usercp INTO boyname,usercp</span><br><span class="line">FROM boys </span><br><span class="line">RIGHT JOIN</span><br><span class="line">beauty b ON b.boyfriend_id &#x3D; boys.id</span><br><span class="line">WHERE b.name&#x3D;beautyName ;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#调用：</span><br><span class="line">CALL myp7(&#39;鸣人&#39;,@name,@cp)$</span><br><span class="line">SELECT @name,@cp$</span><br><span class="line"></span><br><span class="line">6：创建带inout模式参数的存储过程</span><br><span class="line">传入a和b两个值，最终a和b都翻倍并返回</span><br><span class="line">CREATE PROCEDURE myp8(INOUT a INT ,INOUT b INT)</span><br><span class="line">BEGIN</span><br><span class="line">SET a&#x3D;a*2;</span><br><span class="line">SET b&#x3D;b*2;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#调用</span><br><span class="line">SET @m&#x3D;10$</span><br><span class="line">SET @n&#x3D;20$</span><br><span class="line">CALL myp8(@m,@n)$</span><br><span class="line">SELECT @m,@n$</span><br><span class="line"></span><br><span class="line">删除存储过程</span><br><span class="line">语法：drop procedure 存储过程名</span><br><span class="line">DROP PROCEDURE p1;√</span><br><span class="line">DROP PROCEDURE p2,p3;×</span><br><span class="line"></span><br><span class="line">查看存储过程的信息</span><br><span class="line">DESC myp2;×</span><br><span class="line">SHOW CREATE PROCEDURE  myp2;  √</span><br></pre></td></tr></table></figure><h6 id="存储过程例题："><a href="#存储过程例题：" class="headerlink" title="存储过程例题："></a>存储过程例题：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#一、创建存储过程实现传入用户名和密码，插入到admin表中</span><br><span class="line">CREATE PROCEDURE test_pro1(IN username VARCHAR(20),IN loginPwd VARCHAR(20))</span><br><span class="line">BEGIN</span><br><span class="line">INSERT INTO admin(admin.username,PASSWORD)</span><br><span class="line">VALUES(username,loginpwd);</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#二、创建存储过程实现传入女神编号，返回女神名称和女神电话</span><br><span class="line">CREATE PROCEDURE test_pro2(IN id INT,OUT NAME VARCHAR(20),OUT phone VARCHAR(20))</span><br><span class="line"></span><br><span class="line">BEGIN</span><br><span class="line">SELECT b.name ,b.phone INTO NAME,phone</span><br><span class="line">FROM beauty b</span><br><span class="line">WHERE b.id &#x3D; id;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#三、创建存储存储过程或函数实现传入两个女神生日，返回大小</span><br><span class="line">CREATE PROCEDURE test_pro3(IN birth1 DATETIME,IN birth2 DATETIME,OUT result INT)</span><br><span class="line">BEGIN</span><br><span class="line">SELECT DATEDIFF(birth1,birth2) INTO result;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">#四、创建存储过程或函数实现传入一个日期，格式化成xx年xx月xx日并返回</span><br><span class="line">CREATE PROCEDURE test_pro4(IN mydate DATETIME,OUT strDate VARCHAR(50))</span><br><span class="line">BEGIN</span><br><span class="line">SELECT DATE_FORMAT(mydate,&#39;%y年%m月%d日&#39;) INTO strDate;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_pro4(NOW(),@str)$</span><br><span class="line">SELECT @str $</span><br><span class="line"></span><br><span class="line">#五、创建存储过程或函数实现传入女神名称，返回：女神 and 男神  格式的字符串</span><br><span class="line">如 传入 ：小昭</span><br><span class="line">返回： 小昭 AND 张无忌</span><br><span class="line">DROP PROCEDURE test_pro5 $</span><br><span class="line">CREATE PROCEDURE test_pro5(IN beautyName VARCHAR(20),OUT str VARCHAR(50))</span><br><span class="line">BEGIN</span><br><span class="line">SELECT CONCAT(beautyName,&#39; and &#39;,IFNULL(boyName,&#39;null&#39;)) INTO str</span><br><span class="line">FROM boys bo</span><br><span class="line">RIGHT JOIN beauty b ON b.boyfriend_id &#x3D; bo.id</span><br><span class="line">WHERE b.name&#x3D;beautyName;</span><br><span class="line"></span><br><span class="line">SET str&#x3D;</span><br><span class="line"></span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_pro5(&#39;柳岩&#39;,@str)$</span><br><span class="line">SELECT @str$</span><br><span class="line"></span><br><span class="line">#六、创建存储过程或函数，根据传入的条目数和起始索引，查询beauty表的记录</span><br><span class="line">DROP PROCEDURE test_pro6$</span><br><span class="line">CREATE PROCEDURE test_pro6(IN startIndex INT,IN size INT)</span><br><span class="line">BEGIN</span><br><span class="line">SELECT * FROM beauty LIMIT startIndex,size;</span><br><span class="line">END $</span><br><span class="line"></span><br><span class="line">CALL test_pro6(3,5)$</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;存储过程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;含义：一组预先编译好的SQL语句的集合，理解或批处理语句。&lt;/p&gt;
&lt;p&gt;1：提高代码的重用性。&lt;/p&gt;
&lt;p&gt;2：简化操作。&lt;/p&gt;
&lt;p&gt;3：减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率。&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL变量</title>
    <link href="https://7heng.github.io/2021/04/03/MySQL%E5%8F%98%E9%87%8F/"/>
    <id>https://7heng.github.io/2021/04/03/MySQL%E5%8F%98%E9%87%8F/</id>
    <published>2021-04-03T00:38:24.000Z</published>
    <updated>2021-04-03T01:45:04.466Z</updated>
    
    <content type="html"><![CDATA[<h6 id="系统变量："><a href="#系统变量：" class="headerlink" title="系统变量："></a>系统变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">全局变量</span><br><span class="line">会话变量。</span><br></pre></td></tr></table></figure><h6 id="自定义变量："><a href="#自定义变量：" class="headerlink" title="自定义变量："></a>自定义变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户变量</span><br><span class="line">局部变量。</span><br></pre></td></tr></table></figure><h6 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量:"></a>系统变量:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">说明：变量由系统定义，不是用户定义，属于服务器层面</span><br><span class="line">注意：全局变量需要添加global关键字，会话变量需要添加session关键字，如果不写，默认会话级别。</span><br><span class="line">使用步骤：</span><br><span class="line"></span><br><span class="line">1：查看所有系统变量</span><br><span class="line">show global |【session】 variables;</span><br><span class="line"></span><br><span class="line">2：查看满足条件的部分系统变量</span><br><span class="line">show global |【session】 variables like &#39;%char%&#39;;</span><br><span class="line"></span><br><span class="line">3：查看指定的系统变量的值</span><br><span class="line">select @@global |【session】 系统变量名;</span><br><span class="line"></span><br><span class="line">4：为某个系统变量赋值</span><br><span class="line">方式一：</span><br><span class="line">set global |【session】 系统变量名&#x3D;值;</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">set @@global |【session】系统变量名&#x3D;值;</span><br></pre></td></tr></table></figure><h6 id="全局变量："><a href="#全局变量：" class="headerlink" title="全局变量："></a>全局变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">作用域：针对于所有会话（连接）有效，但不能跨重启</span><br><span class="line"></span><br><span class="line">例1：查看所有全局变量</span><br><span class="line">SHOW GLOBAL VARIABLES;</span><br><span class="line"></span><br><span class="line">2：查看满足条件的部分系统变量</span><br><span class="line">SHOW GLOBAL VARIABLES LIKE &#39;%char%&#39;;</span><br><span class="line"></span><br><span class="line">3：查看指定的系统变量的值</span><br><span class="line">SELECT @@global.autocommit;</span><br><span class="line"></span><br><span class="line">4：为某个系统变量赋值</span><br><span class="line">SET @@global.autocommit&#x3D;0;</span><br><span class="line">SET GLOBAL autocommit&#x3D;0;</span><br></pre></td></tr></table></figure><h6 id="会话变量："><a href="#会话变量：" class="headerlink" title="会话变量："></a>会话变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">作用域：针对于当前会话(连接)有效。</span><br><span class="line"></span><br><span class="line">例1：查看所有会话变量：</span><br><span class="line">SHOW SESSION VARIABLES;</span><br><span class="line"></span><br><span class="line">2：查看满足条件的部分会话变量：</span><br><span class="line">SHOW SESSION VARIABLES LIKE &#39;%char%&#39;;</span><br><span class="line"></span><br><span class="line">3：查看指定的会话变量的值</span><br><span class="line">SELECT @@autocommit;</span><br><span class="line">SELECT @@session,tx_isolation;</span><br><span class="line"></span><br><span class="line">4：为某个会话变量赋值</span><br><span class="line">SET @@seassion,tx_isolation&#x3D;&#39;read-uncommitted&#39;;</span><br><span class="line">SET SESSION tx_isolation&#x3D;&#39;read-committed&#39;;</span><br></pre></td></tr></table></figure><h6 id="自定义变量：-1"><a href="#自定义变量：-1" class="headerlink" title="自定义变量："></a>自定义变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">说明：变量由用户自定义，而不是系统提供的</span><br><span class="line"></span><br><span class="line">使用步骤：</span><br><span class="line">1：声明</span><br><span class="line">2：赋值</span><br><span class="line">3：使用(查看、比较、运算等)</span><br></pre></td></tr></table></figure><h6 id="用户变量："><a href="#用户变量：" class="headerlink" title="用户变量："></a>用户变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">作用域：针对于当前会话（连接）有效，作用域同于会话变量</span><br><span class="line"></span><br><span class="line">赋值操作符：&#x3D; 或 :&#x3D;</span><br><span class="line">①：声明并初始化：</span><br><span class="line">SET @变量名&#x3D;值;</span><br><span class="line">SET @变量名:&#x3D;值;</span><br><span class="line">SELECT @变量名:&#x3D;值;</span><br><span class="line"></span><br><span class="line">②：赋值(更新变量的值)</span><br><span class="line">方式一：</span><br><span class="line">SET @变量名&#x3D;值;</span><br><span class="line">SET @变量名:&#x3D;值;</span><br><span class="line">SELECT @变量名:&#x3D;值;</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">SELECT 字段 INFO @变量名</span><br><span class="line">FROM 表;</span><br><span class="line"></span><br><span class="line">③使用(查看变量的值)：</span><br><span class="line">SELECT @变量名;</span><br></pre></td></tr></table></figure><h6 id="局部变量："><a href="#局部变量：" class="headerlink" title="局部变量："></a>局部变量：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">作用域：仅仅定义在它的begin end块中有效</span><br><span class="line">应用在 begin end中的第一句话</span><br><span class="line"></span><br><span class="line">①：声明</span><br><span class="line">DECLARE 变量名 类型;</span><br><span class="line">DECLARE 变量名 类型 【DEFAULT 值】;</span><br><span class="line"></span><br><span class="line">②：赋值(更新变量的值)</span><br><span class="line">方式一：</span><br><span class="line">SET 局部变量名&#x3D;值;</span><br><span class="line">SET 局部变量名:&#x3D;值;</span><br><span class="line">SELECT 局部变量名:&#x3D;值;</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">SELECT 字段 INFO 具备变量名</span><br><span class="line">FROM 表;</span><br><span class="line"></span><br><span class="line">③：使用(查看变量的值)</span><br><span class="line">SELECT 局部变量名;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例：声明两个变量，求和并打印</span><br><span class="line">#用户变量</span><br><span class="line">SET @m&#x3D;1;</span><br><span class="line">SET @n&#x3D;1;</span><br><span class="line">SET @sum&#x3D;@m+@n;</span><br><span class="line">SELECT @sum;</span><br><span class="line"></span><br><span class="line">#局部变量</span><br><span class="line">DECLARE m INT DEFAULT 1;</span><br><span class="line">DECLARE n INT DEFAULT 1;</span><br><span class="line">DECLARE SUM INT;</span><br><span class="line">SET SUM&#x3D;m+n;</span><br><span class="line">SELECT SUM;</span><br></pre></td></tr></table></figure><p>用户变量和局部变量的对比：</p><table><thead><tr><th align="center"></th><th align="center">作用域</th><th align="center">定义位置</th><th align="center">语法</th></tr></thead><tbody><tr><td align="center">用户变量</td><td align="center">当前会话</td><td align="center">会话的任何地方</td><td align="center">加@符号，不用指定类型</td></tr><tr><td align="center">局部变量</td><td align="center">定义它的BEGIN END中</td><td align="center">BEGIN END的第一句话</td><td align="center">一般不用加@，需要指定类型</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;系统变量：&quot;&gt;&lt;a href=&quot;#系统变量：&quot; class=&quot;headerlink&quot; title=&quot;系统变量：&quot;&gt;&lt;/a&gt;系统变量：&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL视图</title>
    <link href="https://7heng.github.io/2021/04/01/MySQL%E8%A7%86%E5%9B%BE/"/>
    <id>https://7heng.github.io/2021/04/01/MySQL%E8%A7%86%E5%9B%BE/</id>
    <published>2021-04-01T09:39:53.000Z</published>
    <updated>2021-04-02T12:57:13.255Z</updated>
    
    <content type="html"><![CDATA[<p>含义：虚拟表，和普通表一样使用</p><p>MySQL15.1版本出现的新特性，是通过表动态生成的数据。</p><table><thead><tr><th align="center"></th><th align="center">创建语法的关键字</th><th align="center">是否实际占用物理空间</th><th align="center">使用</th></tr></thead><tbody><tr><td align="center">视图</td><td align="center">create view</td><td align="center">只是保存了sql逻辑</td><td align="center">增删改查，只是一般不能增删改</td></tr><tr><td align="center">表</td><td align="center">create table</td><td align="center">保存了数据</td><td align="center">增删改查</td></tr></tbody></table><h6 id="视图的好处："><a href="#视图的好处：" class="headerlink" title="视图的好处："></a>视图的好处：</h6><p>1：sql语句提高重复性，效率高。</p><p>2：和表实现了分离，提高了安全性。</p><h6 id="视图的创建："><a href="#视图的创建：" class="headerlink" title="视图的创建："></a>视图的创建：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">CREATE VIEW 视图名</span><br><span class="line">AS</span><br><span class="line">查询语句;</span><br></pre></td></tr></table></figure><h6 id="视图的增删改查："><a href="#视图的增删改查：" class="headerlink" title="视图的增删改查："></a>视图的增删改查：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1：查看视图的数据</span><br><span class="line">SELECT * FROM my_v4;</span><br><span class="line">SELECT * FROM my_v1 WHERE last_name&#x3D;&#39;partners&#39;;</span><br><span class="line"></span><br><span class="line">2：插入视图的数据</span><br><span class="line">INSERT INTO my_V4(last_name,department_id) VALUES(&#39;柯南&#39;,18);</span><br><span class="line"></span><br><span class="line">3：修改视图的数据</span><br><span class="line">UPDATE my_v4 SET last_name&#x3D;&#39;秀一&#39;WHERE last_name&#x3D;&#39;安室透&#39;;</span><br><span class="line"></span><br><span class="line">4：删除视图的数据</span><br><span class="line">DELETE FROM my_v4;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">例：查询姓张的学生名和专业名</span><br><span class="line">SELECT stuname,majorname</span><br><span class="line">FROM stuinfo s</span><br><span class="line">INNER JOIN major m ON s.&#39;majorid&#39;&#x3D;m.&#39;id&#39;</span><br><span class="line">WHERE s.&#39;stuname&#39; LIKE &#39;张%&#39;;</span><br><span class="line"></span><br><span class="line">CREATE VIEW v1</span><br><span class="line">AS</span><br><span class="line">SELECT stuname,majorname</span><br><span class="line">FROM stuinfo s</span><br><span class="line">INNER stuinfo s</span><br><span class="line">INNER JOIN major m ON s.&#39;majorid&#39;-m.&#39;id&#39;;</span><br><span class="line"></span><br><span class="line">SELECT * FROM v1 WHERE stuname LIKE &#39;张%&#39;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">创建视图：</span><br><span class="line">语法：</span><br><span class="line">CREATE VIEW 视图名</span><br><span class="line">AS</span><br><span class="line">查询语句;</span><br><span class="line"></span><br><span class="line">USE myemployees;</span><br><span class="line">例1：查询姓名中包含a字符的员工名、部门名和工种信息</span><br><span class="line">①：创建</span><br><span class="line">CREATE VIEW myv1</span><br><span class="line">AS</span><br><span class="line">SELECT last_name,department_name,job_title</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN departments d ON e.department_id  &#x3D; d.department_id</span><br><span class="line">JOIN jobs j ON j.job_id  &#x3D; e.job_id;</span><br><span class="line"></span><br><span class="line">②：使用</span><br><span class="line">SELECT * FROM myv1 WHERE last_name LIKE &#39;%a%&#39;;</span><br><span class="line"></span><br><span class="line">2：查询各部门的平均工资级别</span><br><span class="line">①：创建视图查看每个部门的平均工资</span><br><span class="line">CREATE VIEW myv2</span><br><span class="line">AS</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id;</span><br><span class="line"></span><br><span class="line">②：使用</span><br><span class="line">SELECT myv2.&#96;ag&#96;,g.grade_level</span><br><span class="line">FROM myv2</span><br><span class="line">JOIN job_grades g</span><br><span class="line">ON myv2.&#96;ag&#96; BETWEEN g.&#96;lowest_sal&#96; AND g.&#96;highest_sal&#96;;</span><br><span class="line"></span><br><span class="line">3：查询平均工资最低的部门信息</span><br><span class="line">SELECT * FROM myv2 ORDER BY ag LIMIT 1;</span><br><span class="line"></span><br><span class="line">4：查询平均工资最低的部门名和工资</span><br><span class="line">CREATE VIEW myv3</span><br><span class="line">AS</span><br><span class="line">SELECT * FROM myv2 ORDER BY ag LIMIT 1;</span><br><span class="line"></span><br><span class="line">SELECT d.*,m.ag</span><br><span class="line">FROM myv3 m</span><br><span class="line">JOIN departments d</span><br><span class="line">ON m.&#96;department_id&#96;&#x3D;d.&#96;department_id&#96;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">视图的修改：</span><br><span class="line">方式一：</span><br><span class="line">create or replace view  视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">SELECT * FROM myv3 </span><br><span class="line"></span><br><span class="line">CREATE OR REPLACE VIEW myv3</span><br><span class="line">AS</span><br><span class="line">SELECT AVG(salary),job_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY job_id;</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">alter view 视图名</span><br><span class="line">as</span><br><span class="line">查询语句;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">ALTER VIEW myv3</span><br><span class="line">AS</span><br><span class="line">SELECT * FROM employees;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">删除视图：</span><br><span class="line">语法：drop view 视图名,视图名,...;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">DROP VIEW emp_v1,emp_v2,myv3;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查看视图：</span><br><span class="line">DESC myv3;</span><br><span class="line">SHOW CREATE VIEW myv3;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">视图的更新：</span><br><span class="line">CREATE OR REPLACE VIEW myv1</span><br><span class="line">AS</span><br><span class="line">SELECT last_name,email,salary*12(1+IFNULL(commission_pct,0)) &quot;annual salary&quot;</span><br><span class="line">FROM employees;</span><br><span class="line"></span><br><span class="line">CREATE OR REPLACE VIEW myv1</span><br><span class="line">AS</span><br><span class="line">SELECT last_name,email</span><br><span class="line">FROM employees;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#1.插入</span><br><span class="line">INSERT INTO myv1 VALUES(&#39;恒子&#39;,&#39;Cy7heng@163.com&#39;);</span><br><span class="line"></span><br><span class="line">#2.修改</span><br><span class="line">UPDATE myv1 SET last_name &#x3D; &#39;张无忌&#39; WHERE last_name&#x3D;&#39;宇智波鼬&#39;;</span><br><span class="line"></span><br><span class="line">#3.删除</span><br><span class="line">DELETE FROM myv1 WHERE last_name &#x3D; &#39;漩涡鸣人&#39;;</span><br></pre></td></tr></table></figure><h5 id="具备以下特点的视图不允许更新："><a href="#具备以下特点的视图不允许更新：" class="headerlink" title="具备以下特点的视图不允许更新："></a>具备以下特点的视图不允许更新：</h5><p><strong>包含以下关键字的sql语句，分组函数、distinot、group by、having、union、或者union all</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE VIEW myv1</span><br><span class="line">AS</span><br><span class="line">SELECT MAX(salary) m,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY deparment_id;</span><br><span class="line"></span><br><span class="line"># 常量视图：</span><br><span class="line">CREATE OR REPLACE VIEW myv2</span><br><span class="line">AS</span><br><span class="line">SELECT &#39;john&#39; NAME;</span><br><span class="line"></span><br><span class="line"># Select中包含子查询：</span><br><span class="line">CREATE OR REPLACE VIEW myv3</span><br><span class="line">AS</span><br><span class="line">SELECT department_id,(SELECT MAX(salary) FROM employees) 最高工资</span><br><span class="line">FROM departments;</span><br><span class="line"></span><br><span class="line"># join:</span><br><span class="line">CREATE OR REPLACE VIEW myv4</span><br><span class="line">AS</span><br><span class="line">SELECT last_name,department_name</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN departments d</span><br><span class="line">ON e.department_id  &#x3D; d.department_id;</span><br><span class="line"></span><br><span class="line"># from一个不能更新的视图</span><br><span class="line">CREATE OR REPLACE VIEW myv5</span><br><span class="line">AS</span><br><span class="line">SELECT * FROM myv3;</span><br><span class="line"></span><br><span class="line"># where子句的子查询引用了from子句中的表</span><br><span class="line">CREATE OR REPLACE VIEW myv6</span><br><span class="line">AS</span><br><span class="line">SELECT last_name,email,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employee_id IN(</span><br><span class="line">SELECT  manager_id</span><br><span class="line">FROM employees</span><br><span class="line">WHERE manager_id IS NOT NULL</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;含义：虚拟表，和普通表一样使用&lt;/p&gt;
&lt;p&gt;MySQL15.1版本出现的新特性，是通过表动态生成的数据。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;创建语法的关键字&lt;/th&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL-TCL</title>
    <link href="https://7heng.github.io/2021/03/31/MySQL-TCL/"/>
    <id>https://7heng.github.io/2021/03/31/MySQL-TCL/</id>
    <published>2021-03-31T08:56:23.000Z</published>
    <updated>2021-03-31T12:35:00.795Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Transaction Control Language 事务控制语言</strong></p><h6 id="事务："><a href="#事务：" class="headerlink" title="事务："></a>事务：</h6><p><strong>一个或一组sql语句组成一个执行单元，这个执行单元要么全部执行，要么全部不执行。</strong></p><p>案例：转账</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">柯南1000</span><br><span class="line">秀一1000</span><br><span class="line"></span><br><span class="line">update表set柯南的余额&#x3D;500where name&#x3D;&#39;柯南&#39;</span><br><span class="line">意外</span><br><span class="line">update表set秀一的余额&#x3D;1500where name&#x3D;&#39;秀一&#39;</span><br><span class="line"></span><br><span class="line">事务的特性：</span><br><span class="line">ACID</span><br><span class="line">原子性：一个事务不可再分割，要么都执行要么都不执行。</span><br><span class="line">一致性：一个事务执行会使数据从一个一致状态切换到另一个一致状态。</span><br><span class="line">隔离性：一个事务的执行不受其他事务事务的干扰。</span><br><span class="line">持久性：一个事务一旦提交，则会永久的改变数据库的数据。</span><br><span class="line"></span><br><span class="line">事务的创建：</span><br><span class="line">隐式事务：事务没有明显的开启和结束的标记。</span><br><span class="line">比如insert、update、delete语句</span><br><span class="line"></span><br><span class="line">delete from 表 where id &#x3D; 1;</span><br><span class="line"></span><br><span class="line">显示事务：事务具有明显的开启和结束的标记</span><br><span class="line">前提：必须先设置自动提交功能为禁用</span><br><span class="line"></span><br><span class="line">set autocommit&#x3D;0;</span><br><span class="line"></span><br><span class="line">步骤1：开启事务</span><br><span class="line">set autocommit&#x3D;0;</span><br><span class="line">start transaction;可选的</span><br><span class="line"></span><br><span class="line">步骤2：编写事务中的sql语句(select insert update delete)</span><br><span class="line">语句1;</span><br><span class="line">语句2;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">步骤3：结束事务</span><br><span class="line">commit;提交事务</span><br><span class="line">rollback;回滚事务</span><br><span class="line"></span><br><span class="line">savepoint 节点名;设置保存点</span><br></pre></td></tr></table></figure><h6 id="事务的割离级别："><a href="#事务的割离级别：" class="headerlink" title="事务的割离级别："></a>事务的割离级别：</h6><table><thead><tr><th align="center"></th><th align="center">脏读</th><th align="center">不可重复度</th><th align="center">幻读</th></tr></thead><tbody><tr><td align="center">read uncommitted</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">read committed</td><td align="center">×</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">repeatable read</td><td align="center">×</td><td align="center">×</td><td align="center">√</td></tr><tr><td align="center">serializable</td><td align="center">×</td><td align="center">×</td><td align="center">×</td></tr></tbody></table><p><strong>MySQL中默认，第三个割离级别    repeatable read</strong></p><p><strong>Oracle中默认第二个隔离级别    read committed</strong></p><p>查看割离级别：</p><p><code>select @@tx_isolation;</code></p><p>设置割离级别：</p><p><code>set session|gloable    transaction    isolation    level    割离级别;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启事务的语句：</span><br><span class="line">uadate 表 set 柯南的余额&#x3D;500 where name&#x3D;&#39;柯南&#39;</span><br><span class="line">update 表 set 秀一的余额&#x3D;1500 where name&#x3D;&#39;秀一&#39;</span><br><span class="line">结束事务的语句;</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1.演示事务的使用步骤</span><br><span class="line">开启事务</span><br><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">START TRANSACTION;</span><br><span class="line">#编写一组事务的语句</span><br><span class="line">UPDATE account SET balance &#x3D; 1000 WHERE username&#x3D;&#39;安室透&#39;;</span><br><span class="line">UPDATE account SET balance &#x3D; 1000 WHERE username&#x3D;&#39;秀一&#39;;</span><br><span class="line"></span><br><span class="line">#结束事务</span><br><span class="line">ROLLBACK;</span><br><span class="line">#commit;</span><br><span class="line"></span><br><span class="line">2.演示事务对于delete和truncate的处理的区别</span><br><span class="line"></span><br><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">START TRANSACTION;</span><br><span class="line"></span><br><span class="line">DELETE FROM account;</span><br><span class="line">ROLLBACK;</span><br><span class="line"></span><br><span class="line">3.演示savepoint 的使用</span><br><span class="line">SET autocommit&#x3D;0;</span><br><span class="line">START TRANSACTION;</span><br><span class="line">DELETE FROM account WHERE id&#x3D;25;</span><br><span class="line">SAVEPOINT a;#设置保存点</span><br><span class="line">DELETE FROM account WHERE id&#x3D;28;</span><br><span class="line">ROLLBACK TO a;#回滚到保存点</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Transaction Control Language 事务控制语言&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;事务：&quot;&gt;&lt;a href=&quot;#事务：&quot; class=&quot;headerlink&quot; title=&quot;事务：&quot;&gt;&lt;/a&gt;事务：&lt;/h6&gt;&lt;p&gt;&lt;stron</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL约束</title>
    <link href="https://7heng.github.io/2021/03/31/MySQL%E7%BA%A6%E6%9D%9F/"/>
    <id>https://7heng.github.io/2021/03/31/MySQL%E7%BA%A6%E6%9D%9F/</id>
    <published>2021-03-31T04:45:58.000Z</published>
    <updated>2021-03-31T05:42:00.760Z</updated>
    
    <content type="html"><![CDATA[<h6 id="常见约束："><a href="#常见约束：" class="headerlink" title="常见约束："></a>常见约束：</h6><p>含义：一种限制，用于限制表中的数据，为了保证表中的数据的准确性和可靠性。</p><p>分类：六大约束</p><p><code>NOT NULL</code>：<strong>非空</strong>，用于保证该字段的值不能为空。—&gt;例如姓名、学号。</p><p><code>DEFAULT</code>：<strong>默认</strong>，用于保证该字段有默认值。—&gt;例如性别。</p><p><code>PRIMARY KEY</code>：<strong>主键</strong>，用于保证字段的值具有唯一性，并且非空。—&gt;例如学号、员工编号等。</p><p><code>UNIQUE</code>：<strong>唯一</strong>，用来保证该字段的值具有唯一性，可以为空。—&gt;例如座位号。</p><p><code>CHECK</code>：<strong>检查的约束</strong>[MySQL不支持]—&gt;例如年龄、性别。</p><p><code>POREIGN KEY</code>：<strong>外键</strong>，</p><p>用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值。—&gt;例如学生表的专业编号，员工表的部门编号，员工表的工种编号。</p><h6 id="添加约束的时机："><a href="#添加约束的时机：" class="headerlink" title="添加约束的时机："></a>添加约束的时机：</h6><p>1：创建表时</p><p>2：修改表</p><h6 id="约束的添加分类："><a href="#约束的添加分类：" class="headerlink" title="约束的添加分类："></a>约束的添加分类：</h6><p><strong>列级约束</strong>：六大约束语法上都支持，但外键约束没有效果。</p><p><strong>表级约束</strong>：除了非空、默认，其他的都支持。</p><h6 id="主键和唯一的对比："><a href="#主键和唯一的对比：" class="headerlink" title="主键和唯一的对比："></a>主键和唯一的对比：</h6><table><thead><tr><th align="center"></th><th align="center">保证唯一性</th><th align="center">是否允许为空</th><th align="center">一个表中可以有多少个</th><th align="center">是否允许组合</th></tr></thead><tbody><tr><td align="center">主键</td><td align="center">√</td><td align="center">×</td><td align="center">至多有一个</td><td align="center">√，但不推荐</td></tr><tr><td align="center">唯一</td><td align="center">√</td><td align="center">√</td><td align="center">可以有多个</td><td align="center">√，但不推荐</td></tr></tbody></table><p><strong>外键：</strong></p><p>1：要求在从表设置外键关系。</p><p>2：从表的外键列的类型和主表的关联列的类型要求一致或兼容，名称无要求。</p><p>3：主表的关联列必须是一个key（一般是主键或唯一)。</p><p>4：插入数据时，先插入主表，再插入从表。</p><p>删除数据时，先删除从表，再删除主表。</p><h6 id="Demo："><a href="#Demo：" class="headerlink" title="Demo："></a>Demo：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">CEEATE TABLE 表名(</span><br><span class="line">字段名 字段类型 列级约束,</span><br><span class="line">    字段名字段类型,</span><br><span class="line">    表级约束</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">一：添加列级约束：</span><br><span class="line">USE students;</span><br><span class="line">DROP TABLE stuinfo(</span><br><span class="line">id INT PRIMARY KEY,#主键</span><br><span class="line">stuName VARCHAR(20) NOT NULL UNIQUE,#非空</span><br><span class="line">gender CHAR(1) CHECK(gender&#x3D;&#39;男&#39; OR gender&#x3D;&#39;女&#39;),#检查</span><br><span class="line">seat INT UNIQUE,#唯一</span><br><span class="line">age INT DEFAULT18,#默认约束</span><br><span class="line">majorid INT REFERENCES major(id)#外键</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE mahor(</span><br><span class="line">id INT PRIMARY KEY,</span><br><span class="line">majorName VARCHAR(20)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">1：查看stuinfo中的所有索引，包括主键、外键、唯一</span><br><span class="line">SHOW INDEX FROM stuinfo;</span><br><span class="line"></span><br><span class="line">2：添加表级约束</span><br><span class="line">语法：[constraint 约束名] 约束类型(字段名);</span><br><span class="line">DROP TABLE IF EXISTS stuinfo;</span><br><span class="line">CREATE TABLE suuinfo(</span><br><span class="line">id INT,</span><br><span class="line">stuname VARCHAR(20),</span><br><span class="line">gender CHAR(1),</span><br><span class="line">seat INT,</span><br><span class="line"></span><br><span class="line">CONSTARINT pk PRIMARY KEY(id),#主键</span><br><span class="line">CONSTARINT uq UNIQUE(seat),#唯一键</span><br><span class="line">CONSTARINT ck CHECK(gender &#x3D; &#39;男&#39; OR gender &#x3D; &#39;女&#39;), #检查</span><br><span class="line">CONSTARINT fk_stuinfo_major FPREIGN KEY(majorid) REFERENCES major(id)#外键</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">通用写法：</span><br><span class="line">CREATE TABLE IF NOT EXISTS stuinfo(</span><br><span class="line">id INT PRIMARY KEY,</span><br><span class="line">stuname VARCHAR(20),</span><br><span class="line">sex CHAR(1),</span><br><span class="line">age INT DEFAULT 18,</span><br><span class="line">seat INT UNIQUE,</span><br><span class="line">majorid INT,</span><br><span class="line">CONSTRAINT fk_stuiofo_major FOREIGN KEY(majorid) REFERENCES major(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">二：修改表时添加约束</span><br><span class="line">1：添加列级约束</span><br><span class="line">alter table 表名 modify colum 字段名 字段类型 新约束;</span><br><span class="line"></span><br><span class="line">2：添加表级约束</span><br><span class="line">alter table 表名 add 【constraint 约束名】 约束类型(字段名) 【外键的作用】;</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">DROP TABLE IF EXISTS stuidfo;</span><br><span class="line">CREATE TABLE stuinfo(</span><br><span class="line">id INT,</span><br><span class="line">stuname VARCHAR(20),</span><br><span class="line">gender CHAR(1),</span><br><span class="line">seat INT,</span><br><span class="line">age INT,</span><br><span class="line">majorid INT</span><br><span class="line">);</span><br><span class="line">DESC stuinfo;</span><br><span class="line"></span><br><span class="line">#1.添加非空约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20)  NOT NULL;</span><br><span class="line"></span><br><span class="line">#2.添加默认约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18;</span><br><span class="line"></span><br><span class="line">#3.添加主键</span><br><span class="line">#①列级约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY;</span><br><span class="line">#②表级约束</span><br><span class="line">ALTER TABLE stuinfo ADD PRIMARY KEY(id);</span><br><span class="line"></span><br><span class="line">#4.添加唯一</span><br><span class="line">#①列级约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE;</span><br><span class="line">#②表级约束</span><br><span class="line">ALTER TABLE stuinfo ADD UNIQUE(seat);</span><br><span class="line"></span><br><span class="line">#5.添加外键</span><br><span class="line">ALTER TABLE stuinfo ADD CONSTRAINT fk_stuinfo_major FOREIGN KEY(majorid) REFERENCES major(id); </span><br><span class="line"></span><br><span class="line">三：修改表时删除约束</span><br><span class="line">#1.删除非空约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR(20) NULL;</span><br><span class="line"></span><br><span class="line">#2.删除默认约束</span><br><span class="line">ALTER TABLE stuinfo MODIFY COLUMN age INT ;</span><br><span class="line"></span><br><span class="line">#3.删除主键</span><br><span class="line">ALTER TABLE stuinfo DROP PRIMARY KEY;</span><br><span class="line"></span><br><span class="line">#4.删除唯一</span><br><span class="line">ALTER TABLE stuinfo DROP INDEX seat;</span><br><span class="line"></span><br><span class="line">#5.删除外键</span><br><span class="line">ALTER TABLE stuinfo DROP FOREIGN KEY fk_stuinfo_major;</span><br><span class="line"></span><br><span class="line">SHOW INDEX FROM stuinfo;</span><br></pre></td></tr></table></figure><h6 id="标识列："><a href="#标识列：" class="headerlink" title="标识列："></a>标识列：</h6><p>又称为自增长列<br>含义：可以不用手动的插入值，系统提供默认的序列值</p><p><strong>特点：</strong><br>1、标识列必须和主键搭配吗？    不一定，但要求是一个key<br>2、一个表可以有几个标识列？    至多一个！<br>3、标识列的类型只能是数值型<br>4、标识列可以通过 SET auto_increment_increment=3;设置步长可以通过 手动插入值，设置起始值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#一、创建表时设置标识列</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS tab_identity;</span><br><span class="line">CREATE TABLE tab_identity(</span><br><span class="line">id INT  ,</span><br><span class="line">NAME FLOAT UNIQUE AUTO_INCREMENT,</span><br><span class="line">seat INT </span><br><span class="line">);</span><br><span class="line">TRUNCATE TABLE tab_identity;</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_identity(id,NAME) VALUES(NULL,&#39;john&#39;);</span><br><span class="line">INSERT INTO tab_identity(NAME) VALUES(&#39;lucy&#39;);</span><br><span class="line">SELECT * FROM tab_identity;</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#39;%auto_increment%&#39;;</span><br><span class="line"></span><br><span class="line">SET auto_increment_increment&#x3D;3;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;常见约束：&quot;&gt;&lt;a href=&quot;#常见约束：&quot; class=&quot;headerlink&quot; title=&quot;常见约束：&quot;&gt;&lt;/a&gt;常见约束：&lt;/h6&gt;&lt;p&gt;含义：一种限制，用于限制表中的数据，为了保证表中的数据的准确性和可靠性。&lt;/p&gt;
&lt;p&gt;分类：六大约束&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL数据类型</title>
    <link href="https://7heng.github.io/2021/03/29/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://7heng.github.io/2021/03/29/MySQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2021-03-29T10:59:13.000Z</published>
    <updated>2021-03-29T12:30:04.663Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">常见的数据类型：</span><br><span class="line">数值型: 整形</span><br><span class="line">   小数</span><br><span class="line">     定点数</span><br><span class="line">     浮点数</span><br><span class="line">字符型:</span><br><span class="line">较短的文本：char、varchar</span><br><span class="line">较长的文本：text、blob(较长的二进制数据)</span><br><span class="line">日期型:</span><br><span class="line"></span><br><span class="line">整形</span><br><span class="line">分类：tinyint(1)、smallint(2)、mediumint(3)、int&#x2F;integer(4)、bigint(8)</span><br><span class="line">特点：①：如果不设置无符号还是有符号，默认是有符号的，如果想设置无符号，需要添加unsigned关键字</span><br><span class="line">②：如果插入的数值超出整型的范围，会报out of range异常，并且插入临界值。</span><br><span class="line">③：如果不设置长度，会有默认的长度。</span><br><span class="line">长度代表了显示的最大宽度，如果不够会用0在左边填充，但必须搭配zerofill使用。</span><br><span class="line"></span><br><span class="line">例：何设置无符号和有符号</span><br><span class="line">DROP TABLE IF EXISTS tab_int;</span><br><span class="line">CREATE TABLE tab_int(</span><br><span class="line">t1 INT(7) ZEROFILL,</span><br><span class="line">t2 INT(7) ZEROFILL </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">DESC tab_int;</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_int VALUES(-123456);</span><br><span class="line">INSERT INTO tab_int VALUES(-123456,-123456);</span><br><span class="line">INSERT INTO tab_int VALUES(2147483648,4294967296);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_int VALUES(123,123);</span><br><span class="line"></span><br><span class="line">SELECT * FROM tab_int;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">小数</span><br><span class="line">分类：</span><br><span class="line">1.浮点型</span><br><span class="line">float(M,D)</span><br><span class="line">double(M,D)</span><br><span class="line">2.定点型</span><br><span class="line">dec(M，D)</span><br><span class="line">decimal(M,D)</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">①</span><br><span class="line">M：整数部位+小数部位</span><br><span class="line">D：小数部位</span><br><span class="line">如果超过范围，则插入临界值</span><br><span class="line">②</span><br><span class="line">M和D都可以省略</span><br><span class="line">如果是decimal，则M默认为10，D默认为0</span><br><span class="line">如果是float和double，则会根据插入的数值的精度来决定精度</span><br><span class="line"></span><br><span class="line">③定点型的精确度较高，如果要求插入数值的精度较高如货币运算等则考虑使用</span><br><span class="line"></span><br><span class="line">测试M和D</span><br><span class="line">DROP TABLE tab_float;</span><br><span class="line">CREATE TABLE tab_float(</span><br><span class="line">f1 FLOAT,</span><br><span class="line">f2 DOUBLE,</span><br><span class="line">f3 DECIMAL</span><br><span class="line">);</span><br><span class="line">SELECT * FROM tab_float;</span><br><span class="line">DESC tab_float;</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_float VALUES(123.4523,123.4523,123.4523);</span><br><span class="line">INSERT INTO tab_float VALUES(123.456,123.456,123.456);</span><br><span class="line">INSERT INTO tab_float VALUES(123.4,123.4,123.4);</span><br><span class="line">INSERT INTO tab_float VALUES(1523.4,1523.4,1523.4);</span><br><span class="line">原则：所选择的类型越简单越好，能保存数值的类型越小越好。</span><br><span class="line"></span><br><span class="line">字符型</span><br><span class="line">较短的文本：</span><br><span class="line">char</span><br><span class="line">varchar</span><br><span class="line"></span><br><span class="line">其他：</span><br><span class="line">binary和varbinary用于保存较短的二进制</span><br><span class="line">enum用于保存枚举</span><br><span class="line">set用于保存集合</span><br><span class="line"></span><br><span class="line">较长的文本：</span><br><span class="line">text</span><br><span class="line">blob(较大的二进制)</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">写法M的意思  特点空间的耗费效率</span><br><span class="line">charchar(M)最大的字符数，可以省略，默认为1固定长度的字符   比较耗费    高</span><br><span class="line"></span><br><span class="line">varchar varchar(M)   最大的字符数，不可以省略  可变长度的字符  比较节省  低</span><br><span class="line"></span><br><span class="line">CREATE TABLE tab_char(</span><br><span class="line">c1 ENUM(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_char VALUES(&#39;a&#39;);</span><br><span class="line">INSERT INTO tab_char VALUES(&#39;b&#39;);</span><br><span class="line">INSERT INTO tab_char VALUES(&#39;c&#39;);</span><br><span class="line">INSERT INTO tab_char VALUES(&#39;m&#39;);</span><br><span class="line">INSERT INTO tab_char VALUES(&#39;A&#39;);</span><br><span class="line"></span><br><span class="line">SELECT * FROM tab_set;</span><br><span class="line"></span><br><span class="line">CREATE TABLE tab_set(</span><br><span class="line"></span><br><span class="line">s1 SET(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">INSERT INTO tab_set VALUES(&#39;a&#39;);</span><br><span class="line">INSERT INTO tab_set VALUES(&#39;A,B&#39;);</span><br><span class="line">INSERT INTO tab_set VALUES(&#39;a,c,d&#39;);</span><br><span class="line"></span><br><span class="line">日期型</span><br><span class="line">分类：</span><br><span class="line">date只保存日期</span><br><span class="line">time 只保存时间</span><br><span class="line">year只保存年</span><br><span class="line"></span><br><span class="line">datetime保存日期+时间</span><br><span class="line">timestamp保存日期+时间</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line"></span><br><span class="line">字节 范围 时区等的影响</span><br><span class="line">datetime 81000——9999       不受</span><br><span class="line">timestamp 4    1970-2038        受</span><br><span class="line"></span><br><span class="line">CREATE TABLE tab_date(</span><br><span class="line">t1 DATETIME,</span><br><span class="line">t2 TIMESTAMP</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO tab_date VALUES(NOW(),NOW());</span><br><span class="line"></span><br><span class="line">SELECT * FROM tab_date;</span><br><span class="line"></span><br><span class="line">SHOW VARIABLES LIKE &#39;time_zone&#39;;</span><br><span class="line"></span><br><span class="line">SET time_zone&#x3D;&#39;+9:00&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java常见异常</title>
    <link href="https://7heng.github.io/2021/03/28/java%E5%B8%B8%E8%A7%81%E5%BC%82%E5%B8%B8/"/>
    <id>https://7heng.github.io/2021/03/28/java%E5%B8%B8%E8%A7%81%E5%BC%82%E5%B8%B8/</id>
    <published>2021-03-28T11:44:57.000Z</published>
    <updated>2021-03-28T12:18:48.881Z</updated>
    
    <content type="html"><![CDATA[<h6 id="java异常体系结构："><a href="#java异常体系结构：" class="headerlink" title="java异常体系结构："></a>java异常体系结构：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">java.lang.Throwable</span><br><span class="line">    |-----java.lang.Error:一般不编写针对性的代码进行处理。</span><br><span class="line">    |-----java.lang.Exception:可以进行异常的处理</span><br><span class="line">       |------编译时异常(checked)</span><br><span class="line">             |-----IOException</span><br><span class="line">                |-----FileNotFoundException</span><br><span class="line">             |-----ClassNotFoundException</span><br><span class="line">       |------运行时异常(unchecked,RuntimeException)</span><br><span class="line">             |-----NullPointerException</span><br><span class="line">             |-----ArrayIndexOutOfBoundsException</span><br><span class="line">             |-----ClassCastException</span><br><span class="line">             |-----NumberFormatException</span><br><span class="line">             |-----InputMismatchException</span><br><span class="line">             |-----ArithmeticException</span><br></pre></td></tr></table></figure><h6 id="java常见异常举例："><a href="#java常见异常举例：" class="headerlink" title="java常见异常举例："></a>java常见异常举例：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">下例为编译时异常：</span><br><span class="line">public void test7()&#123;</span><br><span class="line">    File file &#x3D; new File(&quot;hello.txt&quot;);</span><br><span class="line">    FileInputStream fis &#x3D; new FileInputStream(file);</span><br><span class="line">    </span><br><span class="line">    int data &#x3D; fis.read();</span><br><span class="line">    while(data !&#x3D; -1)&#123;</span><br><span class="line">       System.out.print((char)data);</span><br><span class="line">       data &#x3D; fis.read();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fis.close();</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">下例运行时异常：</span><br><span class="line">1：AirthmeticExctption算数异常：</span><br><span class="line"></span><br><span class="line">public void test6()&#123;</span><br><span class="line">int a &#x3D; 10;</span><br><span class="line">int b &#x3D; 0;</span><br><span class="line">System.out.println(a &#x2F; b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2：InputMismatchException输入类型不匹配异常：</span><br><span class="line"></span><br><span class="line">public void test5()&#123;</span><br><span class="line">Scanner scanner &#x3D; new Scanner(System.in);</span><br><span class="line">int score &#x3D; scanner.nextInt();</span><br><span class="line">System.out.println(score);</span><br><span class="line"></span><br><span class="line">scanner.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3：NumberFormatException数字格式异常：</span><br><span class="line"></span><br><span class="line">public void test4()&#123;</span><br><span class="line">    </span><br><span class="line">String str &#x3D; &quot;123&quot;;</span><br><span class="line">str &#x3D; &quot;abc&quot;;</span><br><span class="line">int num &#x3D; Integer.parseInt(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4：ClassCastException类型转换异常：</span><br><span class="line"></span><br><span class="line">public void test3()&#123;</span><br><span class="line">Object obj &#x3D; new Date();</span><br><span class="line">String str &#x3D; (String)obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5：IndexOutOfBoundsException数组下标越界异常：</span><br><span class="line"></span><br><span class="line">public void test2()&#123;</span><br><span class="line">&#x2F;&#x2F;  ArrayIndexOutOfBoundsException</span><br><span class="line">&#x2F;&#x2F;int[] arr &#x3D; new int[10];</span><br><span class="line">&#x2F;&#x2F;System.out.println(arr[10]);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;  StringIndexOutOfBoundsException</span><br><span class="line">String str &#x3D; &quot;abc&quot;;</span><br><span class="line">System.out.println(str.charAt(3));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6：NullPointerException空指针异常：</span><br><span class="line"></span><br><span class="line">public void test1()&#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;int[] arr &#x3D; null;</span><br><span class="line">&#x2F;&#x2F;System.out.println(arr[3]);</span><br><span class="line"></span><br><span class="line">String str &#x3D; &quot;abc&quot;;</span><br><span class="line">str &#x3D; null;</span><br><span class="line">System.out.println(str.charAt(0));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;java异常体系结构：&quot;&gt;&lt;a href=&quot;#java异常体系结构：&quot; class=&quot;headerlink&quot; title=&quot;java异常体系结构：&quot;&gt;&lt;/a&gt;java异常体系结构：&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL-DDL</title>
    <link href="https://7heng.github.io/2021/03/28/MySQL-DDL/"/>
    <id>https://7heng.github.io/2021/03/28/MySQL-DDL/</id>
    <published>2021-03-28T07:03:02.000Z</published>
    <updated>2021-03-28T07:49:28.040Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据定义语言：</span><br><span class="line">创建：create</span><br><span class="line">修改：alter</span><br><span class="line">删除：drop</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">库的创建</span><br><span class="line">语法：select database [if not exists] 库名;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例1：创建库bleach</span><br><span class="line">CREATE DATABASE IF NOT EXISTS bleach;</span><br><span class="line"></span><br><span class="line">2：库的修改 (MySQL已经移除)</span><br><span class="line">RENAME DATABASE bleach TO 新库名;</span><br><span class="line"></span><br><span class="line">3：更改库的字符集</span><br><span class="line">ALTER DATABASE bleach CHARACTER SET gbk</span><br><span class="line"></span><br><span class="line">4：库的删除</span><br><span class="line">DROP DATABASE IF EXISTS bleach；</span><br></pre></td></tr></table></figure><h6 id="表的管理："><a href="#表的管理：" class="headerlink" title="表的管理："></a>表的管理：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">create table 表名(</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">列名 列的类型【(长度) 约束】,</span><br><span class="line">...</span><br><span class="line">列名 列的类型【(长度) 约束】</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">例1：创建表bleach</span><br><span class="line">CREATE TABLE bleach&#123;</span><br><span class="line">id INT,#编号</span><br><span class="line">bName VARCHAR(20),#图书名</span><br><span class="line">price DOUBLE,#价格</span><br><span class="line">authorId  INT,#作者编号</span><br><span class="line">publishDate DATETIME#出版日期</span><br><span class="line">&#125;;</span><br><span class="line">DESC bleach;</span><br><span class="line"></span><br><span class="line">例2：创建表author</span><br><span class="line">CREATE TABLE IF NOT EXISTS author(</span><br><span class="line">id INT,</span><br><span class="line">au_name VARCHAR(20),</span><br><span class="line">nation VARCHAR(10)</span><br><span class="line">)</span><br><span class="line">DESC author;</span><br><span class="line"></span><br><span class="line">3:表的修改</span><br><span class="line">语法：alter table 表名 add|drop|modify|change column 列名 【列类型 约束】;</span><br><span class="line"></span><br><span class="line">①修改列名</span><br><span class="line">ALTER TABLE book CHANGE COLUMN publishdate pubDate DATETIME;</span><br><span class="line"></span><br><span class="line">②修改列的类型或约束</span><br><span class="line">ALTER TABLE book MODIFY COLUMN pubdate TIMESTAMP;</span><br><span class="line"></span><br><span class="line">③添加新列</span><br><span class="line">ALTER TABLE author ADD COLUMN annual DOUBLE; </span><br><span class="line"></span><br><span class="line">④删除列</span><br><span class="line">ALTER TABLE book_author DROP COLUMN  annual;</span><br><span class="line"></span><br><span class="line">⑤修改表名</span><br><span class="line">ALTER TABLE author RENAME TO book_author;</span><br><span class="line"></span><br><span class="line">DESC book;</span><br><span class="line"></span><br><span class="line">4：表的删除</span><br><span class="line">DROP TABLE IF EXISTS book_author;</span><br><span class="line"></span><br><span class="line">SHOW TABLES;</span><br><span class="line"></span><br><span class="line">#通用的写法：</span><br><span class="line">DROP DATABASE IF EXISTS 旧库名;</span><br><span class="line">CREATE DATABASE 新库名;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS 旧表名;</span><br><span class="line">CREATE TABLE  表名();</span><br><span class="line"></span><br><span class="line">5：表的复制</span><br><span class="line">INSERT INTO author VALUES</span><br><span class="line">(1,&#39;姜文&#39;,&#39;中国&#39;),</span><br><span class="line">(2,&#39;恒子&#39;,&#39;中国&#39;),</span><br><span class="line">(3,&#39;胡歌&#39;,&#39;中国&#39;),</span><br><span class="line">(4,&#39;彭于晏&#39;,&#39;中国&#39;);</span><br><span class="line"></span><br><span class="line">SELECT * FROM Author;</span><br><span class="line">SELECT * FROM copy2;</span><br><span class="line"></span><br><span class="line">#仅仅复制表的结构</span><br><span class="line">CREATE TABLE copy LIKE author;</span><br><span class="line"></span><br><span class="line">#复制表的结构+数据</span><br><span class="line">CREATE TABLE copy2 </span><br><span class="line">SELECT * FROM author;</span><br><span class="line"></span><br><span class="line">#只复制部分数据</span><br><span class="line">CREATE TABLE copy3</span><br><span class="line">SELECT id,au_name</span><br><span class="line">FROM author </span><br><span class="line">WHERE nation&#x3D;&#39;中国&#39;;</span><br><span class="line"></span><br><span class="line">#仅仅复制某些字段</span><br><span class="line">CREATE TABLE copy4 </span><br><span class="line">SELECT id,au_name</span><br><span class="line">FROM author</span><br><span class="line">WHERE 0;</span><br></pre></td></tr></table></figure><h6 id="库和表的管理例题："><a href="#库和表的管理例题：" class="headerlink" title="库和表的管理例题："></a>库和表的管理例题：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">1：创建表dept1</span><br><span class="line">NAMENULL?TYPE</span><br><span class="line">idINT(7)</span><br><span class="line">NAMEVARCHAR(25)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USE test;</span><br><span class="line"></span><br><span class="line">CREATE TABLE dept1(</span><br><span class="line">id INT(7),</span><br><span class="line">NAME VARCHAR(25)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">2：将表departments中的数据插入新表dept2中</span><br><span class="line">CREATE TABLE dept2</span><br><span class="line">SELECT department_id,department_name</span><br><span class="line">FROM myemployees.departments;</span><br><span class="line"></span><br><span class="line">3：创建表emp5</span><br><span class="line">NAMENULL?TYPE</span><br><span class="line">idINT(7)</span><br><span class="line">First_nameVARCHAR (25)</span><br><span class="line">Last_nameVARCHAR(25)</span><br><span class="line">Dept_idINT(7)</span><br><span class="line"></span><br><span class="line">CREATE TABLE emp5(</span><br><span class="line">id INT(7),</span><br><span class="line">first_name VARCHAR(25),</span><br><span class="line">last_name VARCHAR(25),</span><br><span class="line">dept_id INT(7)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">4：将列Last_name的长度增加到50</span><br><span class="line">ALTER TABLE emp5 MODIFY COLUMN last_name VARCHAR(50);</span><br><span class="line"></span><br><span class="line">5：根据表employees创建employees2</span><br><span class="line">CREATE TABLE employees2 LIKE myemployees.employees;</span><br><span class="line"></span><br><span class="line">6：删除表emp5</span><br><span class="line">DROP TABLE IF EXISTS emp5;</span><br><span class="line"></span><br><span class="line">7：将表employees2重命名为emp5</span><br><span class="line">ALTER TABLE employees2 RENAME TO emp5;</span><br><span class="line"></span><br><span class="line">8：在表dept和emp5中添加新列test_column，并检查所作的操作</span><br><span class="line">ALTER TABLE emp5 ADD COLUMN test_column INT;</span><br><span class="line"></span><br><span class="line">9；直接删除表emp5中的列 dept_id</span><br><span class="line">DESC emp5;</span><br><span class="line">ALTER TABLE emp5 DROP COLUMN test_column;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL-DML</title>
    <link href="https://7heng.github.io/2021/03/28/MySQL-DML/"/>
    <id>https://7heng.github.io/2021/03/28/MySQL-DML/</id>
    <published>2021-03-28T06:21:11.000Z</published>
    <updated>2021-03-28T07:02:33.745Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据操作语言：</span><br><span class="line">插入：insert</span><br><span class="line">修改：update</span><br><span class="line">删除：delete</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">插入语句</span><br><span class="line">语法：insert into 表名(列名...) values(值1，...);</span><br><span class="line"></span><br><span class="line">#方式一：</span><br><span class="line">例1：</span><br><span class="line">SELECT * FROM beauty;</span><br><span class="line">INSER INTO beauty(id,NAME,sex,borndate,phone,girlfriend_name,girlfriend_id)插入的值的类型要与列的类型一致或兼容</span><br><span class="line">VALUES(22,&#39;恒子&#39;，‘男’,&#39;2000-12-22&#39;,&#39;17513077777&#39;,&#39;null&#39;,&#39;1&#39;);日期和字符串需要加单引号或双引号。</span><br><span class="line"></span><br><span class="line">2：不可以为null的列必须插入值，可以为null的列如何插入值？</span><br><span class="line">#方式一：</span><br><span class="line">INSERT INTO beauty(id,NAME,sex,borndate,phone,photo,boyfriend_id)</span><br><span class="line">VALUES(18,&#39;贝尔摩德&#39;,&#39;女&#39;,&#39;1999-11-11&#39;,&#39;3333333333&#39;,NULL,7);</span><br><span class="line"></span><br><span class="line">#方式二：</span><br><span class="line">INSERT INTO beauty(id,NAME,sex,phone)</span><br><span class="line">VALUES(15,&#39;灰原哀&#39;,&#39;女&#39;,&#39;77777777777&#39;);</span><br><span class="line"></span><br><span class="line">3：列的顺序是否可以调换</span><br><span class="line">INSERT INTO beauty(NAME,sex,id,phone)</span><br><span class="line">VALUES(&#39;步美&#39;,&#39;女&#39;,10,&#39;777&#39;);</span><br><span class="line"></span><br><span class="line">4：列数和值的个数必须一致</span><br><span class="line">INSERT INTO beauty(NAME,sex,id,phone)</span><br><span class="line">VALUES(&#39;世良&#39;,&#39;女&#39;,18,&#39;111&#39;);</span><br><span class="line"></span><br><span class="line">5：可以省略列名，默认所有列，而且列的顺序和表中列的顺序一致</span><br><span class="line">INSERT INTO beauty</span><br><span class="line">VALUES(18,&#39;柯南&#39;,&#39;男&#39;,NULL,&#39;110&#39;,NULL,NULL);</span><br><span class="line"></span><br><span class="line">#方式二：</span><br><span class="line">语法：</span><br><span class="line">insert into 表名</span><br><span class="line">set 列名&#x3D;值，列名&#x3D;值...;</span><br><span class="line"></span><br><span class="line">方式一和方式二对比：</span><br><span class="line">1：方式一支持插入多行,方式二不支持</span><br><span class="line">INSERT INTO beauty</span><br><span class="line">VALUES(16,&#39;灰原哀&#39;,&#39;女&#39;,&#39;1999-7-7&#39;,&#39;8888888&#39;,NULL,1),</span><br><span class="line">(17,&#39;柯南&#39;,&#39;男&#39;,&#39;1990-7-7&#39;,&#39;8888888&#39;,NULL,2),</span><br><span class="line">(18,&#39;小兰&#39;,&#39;女&#39;,&#39;1990-7-7&#39;,&#39;8888888&#39;,NULL,1);</span><br><span class="line"></span><br><span class="line">2：方式一支持子查询，方式二不支持</span><br><span class="line">INSERT INTO beauty(id,NAME,phone)</span><br><span class="line">SELECT 18,&#39;秀一&#39;,&#39;99999999&#39;;</span><br><span class="line"></span><br><span class="line">INSERT INTO beauty(id,NAME,phone)</span><br><span class="line">SELECT id,boyname,&#39;6666666&#39;</span><br><span class="line">FROM boys WHERE id&lt;3;</span><br><span class="line"></span><br><span class="line">修改语句：</span><br><span class="line">1.修改单表的记录★</span><br><span class="line">语法：</span><br><span class="line">update 表名</span><br><span class="line">set 列&#x3D;新值,列&#x3D;新值,...</span><br><span class="line">where 筛选条件;</span><br><span class="line"></span><br><span class="line">2.修改多表的记录【补充】</span><br><span class="line">sql92语法：</span><br><span class="line">update 表1 别名,表2 别名</span><br><span class="line">set 列&#x3D;值,...</span><br><span class="line">where 连接条件</span><br><span class="line">and 筛选条件;</span><br><span class="line"></span><br><span class="line">sql99语法：</span><br><span class="line">update 表1 别名</span><br><span class="line">inner|left|right join 表2 别名</span><br><span class="line">on 连接条件</span><br><span class="line">set 列&#x3D;值,...</span><br><span class="line">where 筛选条件;</span><br><span class="line"></span><br><span class="line">修改单表的记录</span><br><span class="line">例1：修改beauty表中姓玛的女神的电话为7777777</span><br><span class="line">UPDATE beauty SET phone &#x3D; &#39;7777777&#39;</span><br><span class="line">WHERE NAME LIKE &#39;玛%&#39;;</span><br><span class="line"></span><br><span class="line">2：修改boys表中id号为2的名称为秀一，魅力值 100</span><br><span class="line">UPDATE boys SET boyname&#x3D;&#39;秀一&#39;,usercp&#x3D;100</span><br><span class="line">WHERE id&#x3D;2;</span><br><span class="line"></span><br><span class="line">3：修改多表的记录</span><br><span class="line">修改柯南的女朋友的手机号为777</span><br><span class="line">UPDATE boys bo</span><br><span class="line">INNER JOIN beauty b ON bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">SET b.&#96;phone&#96;&#x3D;&#39;777&#39;,bo.&#96;userCP&#96;&#x3D;1000</span><br><span class="line">WHERE bo.&#96;boyName&#96;&#x3D;&#39;柯南&#39;;</span><br><span class="line"></span><br><span class="line">4：修改没有男朋友的女神的男朋友编号都为2号</span><br><span class="line">UPDATE boys bo</span><br><span class="line">RIGHT JOIN beauty b ON bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">SET b.&#96;boyfriend_id&#96;&#x3D;2</span><br><span class="line">WHERE bo.&#96;id&#96; IS NULL;</span><br><span class="line"></span><br><span class="line">删除语句：</span><br><span class="line">方式一：delete</span><br><span class="line"></span><br><span class="line">1、单表的删除【★】</span><br><span class="line">delete from 表名 where 筛选条件</span><br><span class="line"></span><br><span class="line">2、多表的删除【补充】</span><br><span class="line">sql92语法：</span><br><span class="line">delete 表1的别名,表2的别名</span><br><span class="line">from 表1 别名,表2 别名</span><br><span class="line">where 连接条件</span><br><span class="line">and 筛选条件;</span><br><span class="line"></span><br><span class="line">sql99语法：</span><br><span class="line">delete 表1的别名,表2的别名</span><br><span class="line">from 表1 别名</span><br><span class="line">inner|left|right join 表2 别名 on 连接条件</span><br><span class="line">where 筛选条件;</span><br><span class="line"></span><br><span class="line">方式二：truncate</span><br><span class="line">语法：truncate table 表名;</span><br><span class="line"></span><br><span class="line">(delete)</span><br><span class="line">例1：单表的删除</span><br><span class="line">删除手机号以9结尾的女神信息</span><br><span class="line">DELETE FROM beauty WHERE phone LIKE &#39;%9&#39;;</span><br><span class="line">SELECT * FROM beauty;</span><br><span class="line"></span><br><span class="line">2：多表的删除</span><br><span class="line">删除秀一的女朋友的信息</span><br><span class="line">DELETE b</span><br><span class="line">FROM beauty b</span><br><span class="line">INNER JOIN boys bo ON b.&#96;boyfriend_id&#96; &#x3D; bo.&#96;id&#96;</span><br><span class="line">WHERE bo.&#96;boyName&#96;&#x3D;&#39;秀一&#39;;</span><br><span class="line"></span><br><span class="line">3：删除安室透的信息以及他女朋友的信息</span><br><span class="line">DELETE b,bo</span><br><span class="line">FROM beauty b</span><br><span class="line">INNER JOIN boys bo ON b.&#96;boyfriend_id&#96;&#x3D;bo.&#96;id&#96;</span><br><span class="line">WHERE bo.&#96;boyName&#96;&#x3D;&#39;安室透&#39;;</span><br><span class="line"></span><br><span class="line">(truncate)</span><br><span class="line">例1：将魅力值&gt;100的男神信息删除</span><br><span class="line">TRUNCATE TABLE boys;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">【delete和truncate的区别：】</span><br><span class="line"></span><br><span class="line">1.delete 可以加where 条件，truncate不能加。</span><br><span class="line">2.truncate删除，效率高一丢丢。</span><br><span class="line">3.假如要删除的表中有自增长列，如果用delete删除后，再插入数据，自增长列的值从断点开始，而truncate删除后，再插入数据，自增长列的值从1开始。</span><br><span class="line">4.truncate删除没有返回值，delete删除有返回值。</span><br><span class="line">5.truncate删除不能回滚，delete删除可以回滚。</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java设计模式</title>
    <link href="https://7heng.github.io/2021/03/27/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://7heng.github.io/2021/03/27/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-03-27T12:00:11.000Z</published>
    <updated>2021-03-27T12:22:03.640Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">单例设计模式：</span><br><span class="line"></span><br><span class="line">1：所谓类的单例设计模式，就是采取一定的方法保证在整个软件系统中，对某个类只能存在一个对象实例。</span><br><span class="line"></span><br><span class="line">2：常见的设计模式有懒汉式和饿汉式。</span><br><span class="line"></span><br><span class="line">3：饿汉式：</span><br><span class="line">坏处：对象加载时间过长。</span><br><span class="line">好处:饿汉式是线程安全的。</span><br><span class="line">4：懒汉式：</span><br><span class="line">好处：延迟对象的创建。</span><br><span class="line">坏处：会存在线程不安全的情况。</span><br><span class="line">5：饿汉式是创建类的同时就已经创建好了一个静态的对象供系统使用，以后不再改变。</span><br><span class="line">6：懒汉式是真正用到的时候才建单例对象，做到了延时加载。也因为如此，才会线程不安全。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">饿汉式：</span><br><span class="line">public class SingletonTest1 &#123;</span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">&#x2F;&#x2F;    Bank bank1 &#x3D; new Bank(); 构造器是私有化的，无法new出对象。</span><br><span class="line">&#x2F;&#x2F;    Bank bank2 &#x3D; new Bank(); 构造器是私有化的，无法new出对象。</span><br><span class="line">      </span><br><span class="line">      Bank bank1 &#x3D; Bank.getInstance();</span><br><span class="line">      Bank bank2 &#x3D; Bank.getInstance();</span><br><span class="line">      </span><br><span class="line">      System.out.println(bank1 &#x3D;&#x3D; bank2);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Bank&#123;</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;1.私有化类的构造器</span><br><span class="line">   private Bank()&#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;2.内部创建类的对象</span><br><span class="line">   &#x2F;&#x2F;4.要求此对象也必须声明为静态的</span><br><span class="line">   private static Bank instance &#x3D; new Bank();</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;3.提供公共的静态的方法，返回类的对象</span><br><span class="line">   public static Bank getInstance()&#123;</span><br><span class="line">      return instance;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">懒汉式之线程不安全写法：</span><br><span class="line">public class SingletonTest2 &#123;</span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">      </span><br><span class="line">      Order order1 &#x3D; Order.getInstance();</span><br><span class="line">      Order order2 &#x3D; Order.getInstance();</span><br><span class="line">      </span><br><span class="line">      System.out.println(order1 &#x3D;&#x3D; order2);</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Order&#123;</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;1.私有化类的构造器</span><br><span class="line">   private Order()&#123;</span><br><span class="line">      </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;2.声明当前类对象，没有初始化</span><br><span class="line">   &#x2F;&#x2F;4.此对象也必须声明为static的</span><br><span class="line">   private static Order instance &#x3D; null;</span><br><span class="line">   </span><br><span class="line">   &#x2F;&#x2F;3.声明public、static的返回当前类对象的方法</span><br><span class="line">   public static Order getInstance()&#123;</span><br><span class="line">      </span><br><span class="line">      if(instance &#x3D;&#x3D; null)&#123;</span><br><span class="line">         </span><br><span class="line">         instance &#x3D; new Order();</span><br><span class="line">         </span><br><span class="line">      &#125;</span><br><span class="line">      return instance;</span><br><span class="line">   &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">利用同步机制实现线程安全的懒汉式：</span><br><span class="line">public class BankTest &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Bank&#123;</span><br><span class="line">&#x2F;&#x2F; 私有化类的构造器</span><br><span class="line">private Bank()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">private static Bank instance &#x3D; null;</span><br><span class="line">public static Bank getInstance()&#123;</span><br><span class="line">&#x2F;&#x2F;方式一：效率稍差</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;       synchronized (Bank.class) &#123;</span><br><span class="line">&#x2F;&#x2F;           if(instance &#x3D;&#x3D; null)&#123;</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;               instance &#x3D; new Bank();</span><br><span class="line">&#x2F;&#x2F;           &#125;</span><br><span class="line">&#x2F;&#x2F;           return instance;</span><br><span class="line">&#x2F;&#x2F;       &#125;</span><br><span class="line">&#x2F;&#x2F;方式二：效率更高</span><br><span class="line">        if(instance &#x3D;&#x3D; null)&#123;</span><br><span class="line"></span><br><span class="line">        synchronized (Bank.class) &#123;</span><br><span class="line">            if(instance &#x3D;&#x3D; null)&#123;</span><br><span class="line"></span><br><span class="line">                instance &#x3D; new Bank();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return instance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL分页查询</title>
    <link href="https://7heng.github.io/2021/03/27/MySQL%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    <id>https://7heng.github.io/2021/03/27/MySQL%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-03-27T11:18:38.000Z</published>
    <updated>2021-03-27T11:35:42.397Z</updated>
    
    <content type="html"><![CDATA[<p><em>当要显示的数据，一页显示不全，需要分页提交sql请求。</em></p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select 查询列表</span><br><span class="line">from 表</span><br><span class="line">【 join type join 表2</span><br><span class="line">on 连接条件</span><br><span class="line">where 筛选条件</span><br><span class="line">group by 分组字段</span><br><span class="line">having 分组后的筛选</span><br><span class="line">order by 排序后的字段】</span><br><span class="line">limit [offset],size；</span><br></pre></td></tr></table></figure><p>offset 要显示条目的起始索引 (起始索引从0开始)</p><p>size 要显示的条目个数</p><p><strong>特点：</strong></p><p>&emsp;①：limit语句放在查询语句的最后</p><p>&emsp;②公式：要显示的页数page，每页的条目数size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select 查询列表</span><br><span class="line">from 表</span><br><span class="line">limit (page-1) * size,size;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例1：查询前五条员工信息</span><br><span class="line">SELECT * FROM employees LIMIT 0,5;</span><br><span class="line">SELECT * FROM employees LIMIE 5;</span><br><span class="line"></span><br><span class="line">2：查询第11条---&gt;第25条</span><br><span class="line">SELECT * FROM employees LIMIT 10,15;</span><br><span class="line"></span><br><span class="line">3：有奖金的员工信息，并且工资较高的前10名显示出来</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">ORDER BY salary DESC</span><br><span class="line">LIMIT 10;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;当要显示的数据，一页显示不全，需要分页提交sql请求。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL子查询</title>
    <link href="https://7heng.github.io/2021/03/27/MySQL%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    <id>https://7heng.github.io/2021/03/27/MySQL%E5%AD%90%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-03-27T07:05:34.000Z</published>
    <updated>2021-03-28T06:18:10.606Z</updated>
    
    <content type="html"><![CDATA[<h6 id="子查询："><a href="#子查询：" class="headerlink" title="子查询："></a>子查询：</h6><p>&emsp;<em>&emsp;一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询，在外面的查询语句，称为主查询或外查询。</em></p><p><strong>分类：</strong></p><p>按子查询出现的位置：</p><p>&emsp;&emsp;&emsp;&emsp;select后面：<strong>仅仅支持标量子查询。</strong></p><p>&emsp;&emsp;&emsp;&emsp;from后面：<strong>支持表子查询。</strong></p><p>&emsp;&emsp;&emsp;&emsp;where或having后面：<strong>标量子查询 (单行子查询)、列子查询 (多行子查询)、行子查询(多行多列)。</strong></p><p>&emsp;&emsp;&emsp;&emsp;exists后面(也称相关子查询)：<strong>表子查询。</strong></p><p>按结果集的行列数不同：</p><p>&emsp;&emsp;&emsp;&emsp;标量子查询（结果集只有一行一列）</p><p>&emsp;&emsp;&emsp;&emsp;列子查询（结果集只有一列多行）</p><p>&emsp;&emsp;&emsp;&emsp;行子查询（结果集有一行多列）</p><p>&emsp;&emsp;&emsp;&emsp;表子查询（结果集一般为多行多列）</p><p><strong>特点：</strong></p><p>1：子查询都放在小括号内。</p><p>2：子查询可以放在from后面、select后面、where后面、having后面，但一般放在条件的右侧。</p><p>3：子查询优先于主查询执行，主查询使用了子查询的执行结果。</p><p>4：子查询根据查询结果的行数不同分为以下两类：</p><p>&emsp;&emsp;①：单行子查询：</p><p>&emsp;&emsp;&emsp;&emsp;结果只有一行，一般搭配单行操作符使用：&gt; &lt; = &gt;= &lt;=</p><p>&emsp;&emsp;&emsp;&emsp;非法使用子查询的情况：a：子查询的结果为一组值。</p><p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;b：子查询的结果为空。</p><p>&emsp;&emsp;②：多行子查询：</p><p>&emsp;&emsp;&emsp;&emsp;结果集有多行，一般搭配多行操作符使用：any、all、in、not、in</p><p>&emsp;&emsp;&emsp;&emsp;in：属于子查询结果中任意一个就行。</p><p>&emsp;&emsp;&emsp;&emsp;any和all往往可以用其他查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line">标量子查询</span><br><span class="line">例1：谁的工资比Angel高。</span><br><span class="line">①查询Angel的工资</span><br><span class="line">SELECT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE last_name &#x3D; &#39;Angel&#39;;</span><br><span class="line"></span><br><span class="line">②：查询员工的信息，满足salary&gt;①的结果</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&gt;&#123;</span><br><span class="line">SELECT salary</span><br><span class="line">    FROM employees</span><br><span class="line">    WHERE last_name &#x3D; &#39;Angel&#39;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">2：返回job_id与141号员工相同，salary比143号员工多的员工，job_id和工资。</span><br><span class="line">①：查询141号员工的job_id</span><br><span class="line">SELECT job_id </span><br><span class="line">FROM employees</span><br><span class="line">WHERE employee_id &#x3D; 141</span><br><span class="line"></span><br><span class="line">②：查询143号员工的salary</span><br><span class="line">SELECT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employee_id &#x3D; 143</span><br><span class="line"></span><br><span class="line">③：查询员工的姓名，job_id和工资，要求job_id&#x3D;①并且salary&gt;②</span><br><span class="line">SELECT last_name,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#123;</span><br><span class="line">    SELECT job_id </span><br><span class="line">    FROM employees</span><br><span class="line">    WHERE employee_id &#x3D; 141</span><br><span class="line">&#125;</span><br><span class="line">AND salary&gt;&#123;</span><br><span class="line">    SELECT salary</span><br><span class="line">    FROM employees</span><br><span class="line">    WHERE employee_id &#x3D; 143</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">3：返回公司工资最少的员工的last_name,job_id和salary</span><br><span class="line">①：查询公司的最低工资</span><br><span class="line">SELECT MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">②：查询last_name,job_id和salary,要求salary&#x3D;①</span><br><span class="line">SELECT last_name,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&#x3D;&#123;</span><br><span class="line">SELECT MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">4：查询最低工资大于50号部门最低工资的部门id和其最低工资</span><br><span class="line">①：查询50号部门的最低工资</span><br><span class="line">SELECT MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE depertment_id &#x3D; 50</span><br><span class="line"></span><br><span class="line">②：查询每个部门的最低工资</span><br><span class="line">SELECT MIN(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line"></span><br><span class="line">③：在②的基础上筛选，满足min(salary)&gt;①</span><br><span class="line">SELECT MIN(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING MIN(salary)&gt;&#123;</span><br><span class="line">    SELECT MIN(salary)</span><br><span class="line">    FROM employees</span><br><span class="line">    WHERE department_id &#x3D; 50</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">列子查询(多行子查询)：</span><br><span class="line">例1：返回location_id是1400或1700的部门中的所有员工姓名</span><br><span class="line">①：查询locati_id是1400或1700的部门编号</span><br><span class="line">SELECT DISTINCT department_id</span><br><span class="line">FROM depertments</span><br><span class="line">WHERE location_id IN (1400,1700)</span><br><span class="line"></span><br><span class="line">②：查询员工姓名，要求部门号是①列表中的某一个</span><br><span class="line">SELECT last_name</span><br><span class="line">FROM employees</span><br><span class="line">WHERE department_id &lt;&gt;ALL&#123;</span><br><span class="line">    SELECT DISTINCT department_id</span><br><span class="line">    FROM depertments</span><br><span class="line">    WHERE location_id IN (1400,1700)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">2：返回其它工种中比job_id为&#39;IT_PROG&#39;工种任一工资低的员工的员工号、姓名、job_id以及salary</span><br><span class="line">①：查询job_id为&#39;IT_PROG&#39;部门任一工资</span><br><span class="line">SELECT DISTINCT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39;</span><br><span class="line"></span><br><span class="line">②：查询员工号、姓名、job_id以及salary，salary&lt;①中的任意一个</span><br><span class="line">SELECT last_name,employee_id,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&lt;ANY(</span><br><span class="line">SELECT DISTINCT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39;</span><br><span class="line"></span><br><span class="line">) AND job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br><span class="line"></span><br><span class="line">#或</span><br><span class="line">SELECT last_name,employee_id,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&lt;(</span><br><span class="line">SELECT MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39;</span><br><span class="line"></span><br><span class="line">) AND job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br><span class="line"></span><br><span class="line">3：返回其它部门中比job_id为‘IT_PROG’部门所有工资都低的员工   的员工号、姓名、job_id 以及salary</span><br><span class="line">SELECT last_name,employee_id,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&lt;ALL(</span><br><span class="line">SELECT DISTINCT salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39;</span><br><span class="line"></span><br><span class="line">) AND job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br><span class="line"></span><br><span class="line">#或</span><br><span class="line">SELECT last_name,employee_id,job_id,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&lt;(</span><br><span class="line">SELECT MIN( salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39;</span><br><span class="line"></span><br><span class="line">) AND job_id&lt;&gt;&#39;IT_PROG&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">行子查询（结果集一行多列或多行多列）</span><br><span class="line">例1：查询员工编号最小并且工资最高的员工信息</span><br><span class="line">SELECT * </span><br><span class="line">FROM employees</span><br><span class="line">WHERE (employee_id,salary)&#x3D;(</span><br><span class="line">SELECT MIN(employee_id),MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">①：查询最小的员工编号</span><br><span class="line">SELECT MIN(employee_id)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">#②查询最高工资</span><br><span class="line">SELECT MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">#③：查询员工信息</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employee_id&#x3D;(</span><br><span class="line">SELECT MIN(employee_id)</span><br><span class="line">FROM employees</span><br><span class="line">)AND salary&#x3D;(</span><br><span class="line">SELECT MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select后面仅仅支持标量子查询</span><br><span class="line">例1：查询每个部门的员工个数</span><br><span class="line">SELECT d.*,(</span><br><span class="line"></span><br><span class="line">SELECT COUNT(*)</span><br><span class="line">FROM employees e</span><br><span class="line">WHERE e.department_id &#x3D; d.&#96;department_id&#96;</span><br><span class="line"> ) 个数</span><br><span class="line"> FROM departments d;</span><br><span class="line"> </span><br><span class="line"> 2：查询员工号&#x3D;102的部门名</span><br><span class="line">SELECT (</span><br><span class="line">SELECT department_name,e.department_id</span><br><span class="line">FROM departments d</span><br><span class="line">INNER JOIN employees e</span><br><span class="line">ON d.department_id&#x3D;e.department_id</span><br><span class="line">WHERE e.employee_id&#x3D;102</span><br><span class="line"></span><br><span class="line">) 部门名;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from后面将子查询结果充当一张表，要求必须起别名</span><br><span class="line">例1：查询每个部门的平均工资的工资等级</span><br><span class="line">①：查询每个部门的平均工资</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line"></span><br><span class="line">②：连接①的结果集和job_grades表，筛选条件平均工资 between lowest_sal and highest_sal</span><br><span class="line">SELECT  ag_dep.*,g.&#96;grade_level&#96;</span><br><span class="line">FROM (</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">) ag_dep</span><br><span class="line">INNER JOIN job_grades g</span><br><span class="line">ON ag_dep.ag BETWEEN lowest_sal AND highest_sal;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exists后面（相关子查询）</span><br><span class="line">语法：</span><br><span class="line">exists(完整的查询语句)</span><br><span class="line">结果：1或0</span><br><span class="line">SELECT EXISTS(SELECT employee_id FROM employees WHERE salary&#x3D;300000);</span><br><span class="line">例1：查询有员工的部门名</span><br><span class="line">#in</span><br><span class="line">SELECT department_name</span><br><span class="line">FROM departments d</span><br><span class="line">WHERE d.&#96;department_id&#96; IN(</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">#exists</span><br><span class="line">SELECT department_name</span><br><span class="line">FROM departments d</span><br><span class="line">WHERE EXISTS(</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees e</span><br><span class="line">WHERE d.&#96;department_id&#96;&#x3D;e.&#96;department_id&#96;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">2：查询没有女朋友的男神信息</span><br><span class="line">#in</span><br><span class="line">SELECT bo.*</span><br><span class="line">FROM boys bo</span><br><span class="line">WHERE bo.id NOT IN(</span><br><span class="line">SELECT boyfriend_id</span><br><span class="line">FROM beauty</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">#exists</span><br><span class="line">SELECT bo.*</span><br><span class="line">FROM boys bo</span><br><span class="line">WHERE NOT EXISTS(</span><br><span class="line">SELECT boyfriend_id</span><br><span class="line">FROM beauty b</span><br><span class="line">WHERE bo.&#96;id&#96;&#x3D;b.&#96;boyfriend_id&#96;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line">经典例题：</span><br><span class="line">1：查询工资最低的员工信息: last_name, salary</span><br><span class="line">①：查询最低的工资</span><br><span class="line">SELECT MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">②：查询</span><br><span class="line">last_name,salary，要求salary&#x3D;①</span><br><span class="line">SELECT last_name,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE salary&#x3D;(</span><br><span class="line">SELECT MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">2：查询平均工资最低的部门信息</span><br><span class="line"></span><br><span class="line">#方式一：</span><br><span class="line">①：各部门的平均工资</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">②：查询①结果上的最低平均工资</span><br><span class="line">SELECT MIN(ag)</span><br><span class="line">FROM (</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">) ag_dep</span><br><span class="line"></span><br><span class="line">③：查询哪个部门的平均工资&#x3D;②</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING AVG(salary)&#x3D;(</span><br><span class="line">SELECT MIN(ag)</span><br><span class="line">FROM (</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">) ag_dep</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">④：查询部门信息</span><br><span class="line">SELECT d.*</span><br><span class="line">FROM departments d</span><br><span class="line">WHERE d.&#96;department_id&#96;&#x3D;(</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING AVG(salary)&#x3D;(</span><br><span class="line">SELECT MIN(ag)</span><br><span class="line">FROM (</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">) ag_dep</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">#方式二：</span><br><span class="line">①：各部门的平均工资</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line"></span><br><span class="line">②：求出最低平均工资的部门编号</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY AVG(salary) </span><br><span class="line">LIMIT 1;</span><br><span class="line"></span><br><span class="line">③：查询部门信息</span><br><span class="line">SELECT *</span><br><span class="line">FROM departments</span><br><span class="line">WHERE department_id&#x3D;(</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY AVG(salary) </span><br><span class="line">LIMIT 1</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">3：查询平均工资最低的部门信息和该部门的平均工资</span><br><span class="line">①：各部门的平均工资</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line"></span><br><span class="line">②：求出最低平均工资的部门编号</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY AVG(salary) </span><br><span class="line">LIMIT 1;</span><br><span class="line"></span><br><span class="line">③：查询部门信息</span><br><span class="line">SELECT d.*,ag</span><br><span class="line">FROM departments d</span><br><span class="line">JOIN (</span><br><span class="line">SELECT AVG(salary) ag,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY AVG(salary) </span><br><span class="line">LIMIT 1</span><br><span class="line"></span><br><span class="line">) ag_dep</span><br><span class="line">ON d.&#96;department_id&#96;&#x3D;ag_dep.department_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4：查询平均工资最高的 job 信息</span><br><span class="line">①：查询最高的job的平均工资</span><br><span class="line">SELECT AVG(salary),job_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY job_id</span><br><span class="line">ORDER BY AVG(salary) DESC</span><br><span class="line">LIMIT 1</span><br><span class="line"></span><br><span class="line">②：查询job信息</span><br><span class="line">SELECT * </span><br><span class="line">FROM jobs</span><br><span class="line">WHERE job_id&#x3D;(</span><br><span class="line">SELECT job_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY job_id</span><br><span class="line">ORDER BY AVG(salary) DESC</span><br><span class="line">LIMIT 1</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">5：查询平均工资高于公司平均工资的部门有哪些?</span><br><span class="line">①：查询平均工资</span><br><span class="line">SELECT AVG(salary)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">②：查询每个部门的平均工资</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line"></span><br><span class="line">③：筛选②结果集，满足平均工资&gt;①</span><br><span class="line">SELECT AVG(salary),department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING AVG(salary)&gt;(</span><br><span class="line">SELECT AVG(salary)</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">6：查询出公司中所有 manager 的详细信息.</span><br><span class="line">①：查询所有manager的员工编号</span><br><span class="line">SELECT DISTINCT manager_id</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">②查询详细信息，满足employee_id&#x3D;①</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employee_id &#x3D;ANY(</span><br><span class="line">SELECT DISTINCT manager_id</span><br><span class="line">FROM employees</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">7：各个部门中 最高工资中最低的那个部门的 最低工资是多少</span><br><span class="line">①：查询各部门的最高工资中最低的部门编号</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY MAX(salary)</span><br><span class="line">LIMIT 1</span><br><span class="line"></span><br><span class="line">②：查询①结果的那个部门的最低工资</span><br><span class="line">SELECT MIN(salary) ,department_id</span><br><span class="line">FROM employees</span><br><span class="line">WHERE department_id&#x3D;(</span><br><span class="line">SELECT department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">ORDER BY MAX(salary)</span><br><span class="line">LIMIT 1</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">8：查询平均工资最高的部门的 manager 的详细信息: last_name, department_id, email, salary</span><br><span class="line">①：查询平均工资最高的部门编号</span><br><span class="line">SELECT </span><br><span class="line">    department_id </span><br><span class="line">FROM</span><br><span class="line">    employees </span><br><span class="line">GROUP BY department_id </span><br><span class="line">ORDER BY AVG(salary) DESC </span><br><span class="line">LIMIT 1 </span><br><span class="line"></span><br><span class="line">②：将employees和departments连接查询，筛选条件是①</span><br><span class="line">    SELECT </span><br><span class="line">        last_name, d.department_id, email, salary </span><br><span class="line">    FROM</span><br><span class="line">        employees e </span><br><span class="line">        INNER JOIN departments d </span><br><span class="line">            ON d.manager_id &#x3D; e.employee_id </span><br><span class="line">    WHERE d.department_id &#x3D; </span><br><span class="line">        (SELECT </span><br><span class="line">            department_id </span><br><span class="line">        FROM</span><br><span class="line">            employees </span><br><span class="line">        GROUP BY department_id </span><br><span class="line">        ORDER BY AVG(salary) DESC </span><br><span class="line">        LIMIT 1) ;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;子查询：&quot;&gt;&lt;a href=&quot;#子查询：&quot; class=&quot;headerlink&quot; title=&quot;子查询：&quot;&gt;&lt;/a&gt;子查询：&lt;/h6&gt;&lt;p&gt;&amp;emsp;&lt;em&gt;&amp;emsp;一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL连接查询</title>
    <link href="https://7heng.github.io/2021/03/27/MySQL%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2/"/>
    <id>https://7heng.github.io/2021/03/27/MySQL%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-03-27T02:53:27.000Z</published>
    <updated>2021-03-28T06:19:31.060Z</updated>
    
    <content type="html"><![CDATA[<h6 id="多表连接查询："><a href="#多表连接查询：" class="headerlink" title="多表连接查询："></a>多表连接查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">笛卡尔乘积，如果连接条件省略或无效则会出现</span><br><span class="line">解决办法：添加上连接条件。</span><br></pre></td></tr></table></figure><h6 id="传统模式下的连接：等值连接—非等值连接："><a href="#传统模式下的连接：等值连接—非等值连接：" class="headerlink" title="传统模式下的连接：等值连接—非等值连接："></a>传统模式下的连接：等值连接—非等值连接：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1：等值连接的结果 &#x3D; 多个表的交集。</span><br><span class="line">2：n表连接，至少需要n-1个连接条件。</span><br><span class="line">3：多个表不分主次，没有顺序要求。</span><br><span class="line">4：一般为表起别名，提高阅读性和性能。</span><br></pre></td></tr></table></figure><h6 id="sql99语法：通过join关键字实现连接。"><a href="#sql99语法：通过join关键字实现连接。" class="headerlink" title="sql99语法：通过join关键字实现连接。"></a>sql99语法：通过join关键字实现连接。</h6><p><em>支持：等值连接、非等值连接、内连接、外连接、交叉连接</em></p><p><em>语法 (好处：语句上，连接条件和筛选条件实现了分离，简洁明了)：</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select 字段···</span><br><span class="line">from 表1</span><br><span class="line">[ inner | left outer | right outer | cross ] join 表2 on 连接条件</span><br><span class="line">[ inner | left outer | right outer | cross ] join 表3 on 连接条件</span><br><span class="line">where 筛选条件</span><br><span class="line">group by 分组字段</span><br><span class="line">having 分组后的筛选条件</span><br><span class="line">order by 排序的字段或表达式</span><br></pre></td></tr></table></figure><h6 id="自连接-起别名-："><a href="#自连接-起别名-：" class="headerlink" title="自连接(起别名)："></a>自连接(起别名)：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">例：查询员工和直接上级的名称</span><br><span class="line">sql99：</span><br><span class="line"></span><br><span class="line">SELECT e.last_name,m.last_name</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN employees m ON e.manager_id &#x3D; m.employee_id;</span><br><span class="line"></span><br><span class="line">sql92：</span><br><span class="line"></span><br><span class="line">SELECT e.last_name,m.last_name</span><br><span class="line">FROM employees e,employees m</span><br><span class="line">WHERE e.manager_id &#x3D; m.employee_id;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">例：等值连接</span><br><span class="line">1：查询员工名、部门名</span><br><span class="line">SELECT last_name,department_name</span><br><span class="line">FROM department d</span><br><span class="line">JOIN employees e</span><br><span class="line">ON e.department_id &#x3D; d.dempartment_id;</span><br><span class="line"></span><br><span class="line">2：查询名字中包含e的员工名和工种名(添加筛选)</span><br><span class="line">SELECT last_name,job_title</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN jobs j</span><br><span class="line">ON e.job_id &#x3D; j.job_id</span><br><span class="line">WHERE e.last_name LIKE &#39;%e%&#39;;</span><br><span class="line"></span><br><span class="line">3：查询部门个数&gt;3的城市名和部门个数(添加分组+筛选)</span><br><span class="line">①：查询每个城市的部门个数</span><br><span class="line">②：在①结果上筛选满足条件的</span><br><span class="line">SELECT city,COUNT(*) 部门个数</span><br><span class="line">FROM departments d</span><br><span class="line">INNER JOIN locations l</span><br><span class="line">ON d.location_id &#x3D; l.location_id</span><br><span class="line">GROUP BY city</span><br><span class="line">HAVING COUNT(*)&gt;3;</span><br><span class="line"></span><br><span class="line">4：查询哪个部门的员工个数&gt;3的部门名和员工个数，并按个数降序(添加排序)</span><br><span class="line">①：查询每个部门的员工个数</span><br><span class="line">SELECT COUNT(*),department_name</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN departments d</span><br><span class="line">ON e.department_id &#x3D; d.department_id</span><br><span class="line">GROUP BY departments_name</span><br><span class="line">②：在①结果上筛选员工个数&gt;3的记录，并排序</span><br><span class="line">SELECT COUNT(*) 个数，department_name</span><br><span class="line">FROM empioyees e</span><br><span class="line">INNER JOIN departments d</span><br><span class="line">ON e.department_id &#x3D; d,department_id</span><br><span class="line">GROUP BY department_name</span><br><span class="line">HAVING COUNT(*)&gt;3</span><br><span class="line">ORDER BY COUNT(*) DESC;</span><br><span class="line"></span><br><span class="line">5:查询员工名、部门名、工作名、并按部门名降序(添加三表连接)</span><br><span class="line">SELECT last_name,department_name,job_title</span><br><span class="line">FROM employees e</span><br><span class="line">INNER JOIN departmens d ON e.department_id &#x3D; d.deparment_id</span><br><span class="line">INNER JOIN jobs j ON e.job_id &#x3D; j.job_id&#x2F;&#x2F;第三个表要与前两个表有联系，否则会出错，顺序可以变。</span><br><span class="line">ORDER BY department_name DESC;</span><br><span class="line"></span><br><span class="line">例：非等值连接</span><br><span class="line">1：查询员工的工资级别</span><br><span class="line">SELECT salary,grade_lever</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN job_grades g</span><br><span class="line">ON e.salary BETWEEN g.lowest_sal AND g.highest_sal;</span><br><span class="line"></span><br><span class="line">2：查询工资级别的个数&gt;20的个数，并且按工资级别降序</span><br><span class="line">SELECT COUNT(*),grade_level</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN job_grades g</span><br><span class="line">ON e.salary BETWEEN g.lowest_sal AND g.highest_sal</span><br><span class="line">GROUP BY grade_leval</span><br><span class="line">HAVING COUNT(*)&gt;20</span><br><span class="line">ORDER BY grade_leval DESC;</span><br><span class="line"></span><br><span class="line">例：自连接</span><br><span class="line">查询员工的名字、上级的名字</span><br><span class="line">SELECT e.last_name,m.last_name</span><br><span class="line">FROM employees e</span><br><span class="line">JOIN employees m</span><br><span class="line">ON e.manager_id &#x3D; m.employee_id</span><br><span class="line">WHERE e.last_name LIKE &#39;%K%&#39;;</span><br></pre></td></tr></table></figure><h6 id="外连接："><a href="#外连接：" class="headerlink" title="外连接："></a>外连接：</h6><p><em>应用场景：用于查询一个表中有，另一个表中没有的记录</em></p><p><strong>特点：</strong></p><p>1：外连接的查询结果为主表中的所有记录</p><p>如果从表中有和它匹配的，则显示匹配的值</p><p>如果从表中没有和它匹配的，则显示null</p><p>外连接查询结果=内连接结果+主表中有而从表没有的记录</p><p>2：左外连接：left join左边的是主表</p><p>&emsp; 右外连接：right join右边的是主表</p><p>3：左外和右外交换两个表的顺序，可以实现同样的效果</p><p>4：全外连接=内连接的结果+表1中右但表2中没有的+表2中有但表1中没有的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">例：查询男友不在男神表的女神名</span><br><span class="line">左外连接：</span><br><span class="line">SELECT b.*,bo.*</span><br><span class="line">FROM boys bo</span><br><span class="line">LEFT OUTER JOIN beauty b</span><br><span class="line">ON b.boyfriend_id &#x3D; bo.id</span><br><span class="line">WHERE b.id IS NULL;</span><br><span class="line"></span><br><span class="line">查询哪个部门没有员工</span><br><span class="line">左外连接：</span><br><span class="line">SEKECT d.*,e.employee_id</span><br><span class="line">FROM departments d</span><br><span class="line">LEFT OUTER JOIN employees e</span><br><span class="line">ON d.department_id &#x3D; e.department_id</span><br><span class="line">WHERE e.enployee_id IS NULL;</span><br><span class="line"></span><br><span class="line">右外连接：</span><br><span class="line">SELECT d.*,e.employee_id</span><br><span class="line">FROM employees e</span><br><span class="line">RIGHT OUTER JOIN departments d</span><br><span class="line">ON d.department_id &#x3D; e.department_id</span><br><span class="line">WHERE e.employee_id IS NULL;</span><br><span class="line"></span><br><span class="line">全外连接：（MySQL中不支持全外连接）</span><br><span class="line">USE girls;</span><br><span class="line">SELECT b.*,bo.*</span><br><span class="line">FROM beayty b</span><br><span class="line">FULL OUTER JOIN boys bo</span><br><span class="line">ON b.boyfriend_id &#x3D; bo.id;</span><br><span class="line"></span><br><span class="line">MySQL中可以使用UNION达到全外连接的效果：</span><br><span class="line">UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</span><br><span class="line">注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</span><br><span class="line">故实现全外连接可以使用：</span><br><span class="line">SELECT * FROM emp e LEFT JOIN dept d ON e.deptno&#x3D;d.deptno</span><br><span class="line">UNION</span><br><span class="line">SELECT * FROM emp e RIGHT JOIN dept d ON e.deptno&#x3D;d.deptno;</span><br><span class="line"></span><br><span class="line">交叉连接：</span><br><span class="line">SELECT b.*,bo.*</span><br><span class="line">FROM beauty b</span><br><span class="line">CROSS JOIN boys bo;</span><br></pre></td></tr></table></figure><h6 id="联合查询："><a href="#联合查询：" class="headerlink" title="联合查询："></a>联合查询：</h6><p><em>union 联合，合并，将多条查询语句的结果合并成为一个结果</em></p><p><strong>语法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询语句1</span><br><span class="line">uinon</span><br><span class="line">查询语句2</span><br><span class="line">unoin</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>应用场景：</strong></p><p><em>要查询的结果来自于多个表</em>，且多个表没有直接的连接关系，但查询的信息一致时。</p><p><strong>特点：</strong></p><p>1：要求多条查询语句的查询列数是一致的。</p><p>2：要求多条查询语句的查询的每一列的类型和顺序最好一致。</p><p>3：union关键字默认去重，如果使用union all 可以包含重复项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">例1：查询部门编号&gt;90或邮箱包含a的员工的信息。</span><br><span class="line">SEKECT * FROM employees WHERE email LIKE &#39;%a%&#39; OR department_id&gt;90;</span><br><span class="line">联合查询：</span><br><span class="line">SELECT * FROM employees WHERE email LIKE &#39;%a%&#39;</span><br><span class="line">UNION </span><br><span class="line">SELECT * FROM employees WHERE department_id&gt;90;</span><br><span class="line"></span><br><span class="line">2：查询中国用户中男性的信息以及外国用户中年男性的用户信息</span><br><span class="line">SELECT id_name,cname FROM t_ca WHERE csex&#x3D;&#39;男&#39;</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT t_id,tname FROM t_id WHERE tGender&#x3D;&#39;male&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;多表连接查询：&quot;&gt;&lt;a href=&quot;#多表连接查询：&quot; class=&quot;headerlink&quot; title=&quot;多表连接查询：&quot;&gt;&lt;/a&gt;多表连接查询：&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java接口</title>
    <link href="https://7heng.github.io/2021/03/25/java%E6%8E%A5%E5%8F%A3/"/>
    <id>https://7heng.github.io/2021/03/25/java%E6%8E%A5%E5%8F%A3/</id>
    <published>2021-03-25T13:55:50.000Z</published>
    <updated>2021-03-25T14:16:32.068Z</updated>
    
    <content type="html"><![CDATA[<h6 id="接口的定义："><a href="#接口的定义：" class="headerlink" title="接口的定义："></a>接口的定义：</h6><p><strong>接口就是抽象方法和常量的集合，从本质上讲，接口是一种特殊的抽象类</strong>。</p><p>1：接口中定义的属性必须是public static final的，而接口中定义的方法必须是public abstract的，因此这些修饰符可以部分或全部忽略。</p><p>2：接口中定义的属性的值在实现类中不能被更改。</p><p>3：一个类中只能实现某个接口，不能继承某个接口。</p><p>4：接口可以继承接口，而且允许继承多个接口，即接口多继承 (一定程度上弥补了java不能多继承)。</p><p>5：如果一个类只实现了一个接口的部分方法，则该类必须声明为抽象类。</p><p>6：一个类可以在继承一个父类的同时实现一个或多个接口，但extends必须在implements之前。</p><p>7：不可以new接口，但可以定义一个接口引用类型的变量并将其指向实现接口对象，达到多态的目的。</p><h6 id="接口的作用："><a href="#接口的作用：" class="headerlink" title="接口的作用："></a>接口的作用：</h6><p>1：通过接口可以实现不相关类的相同行为。</p><p>&emsp;&emsp;例如java规定所有可以完成自我复制功能的类都必须实现java.lang.Colneable接口，但该接口缺是空的，该接口中没有任何内容，目的只是为了起个标志作用。</p><p>2：接口提供了不同对象进行协作的平台。</p><p>&emsp;&emsp;如事件处理</p><p>3：接口可以实现多继承，从一定程度上弥补了类只能单继承的缺陷。</p><p>4：接口时我们了解一个类功能的重要途径。</p><p>&emsp;&emsp;如：java整个容器框架就是以接口的方式建立起来的，实现不同接口的类完成的是不同的功能，接口是我们了解一个类功能的重要途径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">interface It&#123;</span><br><span class="line">int j &#x3D; 20;      &#x2F;&#x2F; 全称： public static final int j &#x3D; 20;</span><br><span class="line">public void f();&#x2F;&#x2F; 全称： public abstact void f();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface It2&#123;</span><br><span class="line">int i &#x3D; 20;</span><br><span class="line">void f();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface It3 extends It, It2&#123;       &#x2F;&#x2F;  接口可以继承接口，而且允许继承多个接口，即接口多继承。</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">class A extends It2&#123;                error   类不能继承接口。</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">class A implements It2&#123;            &#x2F;&#x2F;   implements 不能改为extends。   类只能实现接口。</span><br><span class="line"></span><br><span class="line">public void f()&#123;  &#x2F;&#x2F;public 不可省略。(重写的权限不能低。)   如果方法不是接口中的方法或者只实现接口中的部分方法。 则该类必须是抽象类。</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;i &#x3D; 99;       error。   i 为 final类型。</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B extends A implements It, It2&#123; &#x2F;&#x2F; 一个类可以在继承一个父类的同时实现一个或多个接口，但extends关键字必须在implements之前。</span><br><span class="line">public void f()&#123;</span><br><span class="line"></span><br><span class="line">System.out.printf(&quot;恒子恒子恒子&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void g()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Interface1&#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">It it;</span><br><span class="line">it &#x3D; new B();</span><br><span class="line">it.f();&#x2F;&#x2F;  多态！！</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;it.g();  error 通过接口的引用，只能调用子类从父类继承过来的成员，不能调用子类特有的成员。</span><br><span class="line">&#x2F;&#x2F;It it &#x3D; new It();  error。</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;接口的定义：&quot;&gt;&lt;a href=&quot;#接口的定义：&quot; class=&quot;headerlink&quot; title=&quot;接口的定义：&quot;&gt;&lt;/a&gt;接口的定义：&lt;/h6&gt;&lt;p&gt;&lt;strong&gt;接口就是抽象方法和常量的集合，从本质上讲，接口是一种特殊的抽象类&lt;/strong&gt;。&lt;/p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java线程</title>
    <link href="https://7heng.github.io/2021/03/24/java%E7%BA%BF%E7%A8%8B/"/>
    <id>https://7heng.github.io/2021/03/24/java%E7%BA%BF%E7%A8%8B/</id>
    <published>2021-03-24T12:24:40.000Z</published>
    <updated>2021-03-24T13:25:15.170Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">例1：实现Runnable接口创建多线程；正确的程序。</span><br><span class="line">class A implements Runnable</span><br><span class="line">&#123;</span><br><span class="line">public int tickets &#x3D; 10000;</span><br><span class="line">String str &#x3D; new String(&quot;恒恒恒&quot;);</span><br><span class="line"></span><br><span class="line">public void run()</span><br><span class="line">&#123;</span><br><span class="line">while (true)</span><br><span class="line">&#123;</span><br><span class="line">synchronized (str)&#x2F;&#x2F; 同步代码块。</span><br><span class="line">&#123;</span><br><span class="line">if (tickets &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">Thread.currentThread().getName(), tickets);</span><br><span class="line">--tickets;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_2</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa &#x3D; new A();</span><br><span class="line">Thread t1 &#x3D; new Thread(aa);</span><br><span class="line">t1.start();</span><br><span class="line"></span><br><span class="line">​Thread t2 &#x3D; new Thread(aa);</span><br><span class="line">​t2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：因为是实现了Runnable接口，所以不管是t1,t2都只是传递了类A造出来的一个对象aa,因此t1,t2所访问的tickets和str都是同一个类中的属性,并不用去设置为static。所以Tickets相同，同步代码块锁定的是同一个对象，因此程序正确。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">例2：直接继承Thread类的方法；正确的程序。</span><br><span class="line">class A extends Thread</span><br><span class="line">&#123;</span><br><span class="line">public static int tickets &#x3D; 1000;  &#x2F;&#x2F;static不能省</span><br><span class="line">public static String str &#x3D; new String(&quot;哈哈&quot;);  &#x2F;&#x2F;static不能省</span><br><span class="line"></span><br><span class="line">public void run()&#x2F;&#x2F;  重写Thread类中的run方法，所以上两行的static不能省略。</span><br><span class="line">&#123;</span><br><span class="line">while (true)</span><br><span class="line">&#123;</span><br><span class="line">synchronized (str)&#x2F;&#x2F; 同步代码块。</span><br><span class="line">&#123;</span><br><span class="line">if (tickets &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">Thread.currentThread().getName(), tickets);</span><br><span class="line">--tickets;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_3</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa1 &#x3D; new A();</span><br><span class="line">aa1.start();</span><br><span class="line">&#x2F;&#x2F;  堆中存在两个对象  ok！</span><br><span class="line">A aa2 &#x3D; new A();</span><br><span class="line">aa2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：继承Thread类的A类new出来两个对象aa1和aa2,本该是每个对象都有一个类A的属性，但因为类A中的属性是static,所以aa1和aa2共同拥有tickets和str,所以同步代码块的对象相同，出售的tickets相同，因此程序正确。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">例3：直接继承Thread类的方法；正确的程序。</span><br><span class="line">class A extends Thread</span><br><span class="line">&#123;</span><br><span class="line">public static int tickets &#x3D; 1000;  &#x2F;&#x2F;static不能省</span><br><span class="line">public String str &#x3D; new String(&quot;恒恒恒&quot;);  &#x2F;&#x2F;static不能省</span><br><span class="line"></span><br><span class="line">public void run()&#x2F;&#x2F; 重写Thread类中的run方法，所以上两行的static不能省略。</span><br><span class="line">&#123;</span><br><span class="line">String str &#x3D; &quot;恒子&quot;;</span><br><span class="line">while (true)</span><br><span class="line">&#123;</span><br><span class="line">synchronized (str)&#x2F;&#x2F; 同步代码块。</span><br><span class="line">&#123;</span><br><span class="line">if (tickets &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">Thread.currentThread().getName(), tickets);</span><br><span class="line">--tickets;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_4</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa1 &#x3D; new A();</span><br><span class="line">aa1.start();</span><br><span class="line">&#x2F;&#x2F; 堆中存在两个对象</span><br><span class="line">A aa2 &#x3D; new A();</span><br><span class="line">aa2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：继承Thread类的A类new出来两个对象aa1和aa2,本该是每个对象都有一个类A的属性，但因为类A中的tickets属性是static,所以aa1和aa2共拥tickets属性，但str是非static的，所以同步代码块中的对象并不是同一个对象，但是在执行run()方法时,又重新定义了在数据区的str,所以同步代码块绑定的还是同一个对象，因此该程序正确。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">例4：调用Runnable接口的方法；正确的程序。</span><br><span class="line">class A implements Runnable</span><br><span class="line">&#123;</span><br><span class="line">public static int tickets &#x3D; 1000;</span><br><span class="line">String  str &#x3D; new String(&quot;恒&quot;);&#x2F;&#x2F;   new出来的str在堆区，两种调用的话会不是同一个str;</span><br><span class="line"></span><br><span class="line">public void run()  </span><br><span class="line">&#123;</span><br><span class="line">String str &#x3D; &quot;恒子&quot;;  &#x2F;&#x2F; 局部变量str， 在数据区，是同一个str;</span><br><span class="line"></span><br><span class="line">while (true)</span><br><span class="line">&#123;</span><br><span class="line">synchronized (str)    &#x2F;&#x2F; 需要synchronized(类对象名)</span><br><span class="line">&#123;</span><br><span class="line">if (tickets &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">Thread.currentThread().getName(), tickets);</span><br><span class="line">--tickets;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_9</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa &#x3D; new A();</span><br><span class="line">A bb &#x3D; new A();</span><br><span class="line">Thread t1 &#x3D; new Thread(aa);</span><br><span class="line">t1.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​Thread t2 &#x3D; new Thread(bb);</span><br><span class="line">​t2.start();</span><br><span class="line">​</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：类A实现了Runnable接口，该程序与例1相似，但该程序类A new出了两个对象，因此开辟了两块空间，t1,t2的引用分别是aa和bb,并非同一个引用，但在类A中，Tickets是static的，所以t1,t2还是共同拥有同一个Tickets,但str对于t1,t2来说就不是同一个属性，可是，在执行run()方法的时候，里面定义了在数据区的局部变量str,这又重新使得同步代码块中t1,t2所绑定的对象是同一个对象。因此该程序也是正确的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">例5：实现Runnable接口的方法；错误的程序。</span><br><span class="line">class A implements Runnable</span><br><span class="line">&#123;</span><br><span class="line">public static int tickets &#x3D; 1000;</span><br><span class="line">String  str &#x3D; new String(&quot;恒恒恒恒&quot;);&#x2F;&#x2F;   new出来的str在堆区，两种调用的话会不是同一个str;</span><br><span class="line"></span><br><span class="line">public void run()  </span><br><span class="line">&#123;</span><br><span class="line">​while (true)</span><br><span class="line">​&#123;</span><br><span class="line">​synchronized (str)    &#x2F;&#x2F; 需要synchronized(类对象名)</span><br><span class="line">​&#123;</span><br><span class="line">​if (tickets &gt; 0)</span><br><span class="line">​&#123;</span><br><span class="line">​System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">​Thread.currentThread().getName(), tickets);</span><br><span class="line">​--tickets;</span><br><span class="line">​&#125;</span><br><span class="line">​else</span><br><span class="line">​&#123;</span><br><span class="line">​break;</span><br><span class="line">​&#125;</span><br><span class="line">​&#125;</span><br><span class="line">​&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_9</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa &#x3D; new A();</span><br><span class="line">A bb &#x3D; new A();</span><br><span class="line">Thread t1 &#x3D; new Thread(aa);</span><br><span class="line">t1.start();</span><br><span class="line"></span><br><span class="line">​Thread t2 &#x3D; new Thread(bb);</span><br><span class="line">​t2.start();</span><br><span class="line">​</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：(对比例4)，少了run()方法中的String str &#x3D; &quot;恒子&quot;;所以同步代码块中的对象并未是统一对象，因此该程序错误。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">例6：直接继承Thread类的方法；错误的程序。</span><br><span class="line">class A extends Thread</span><br><span class="line">&#123;</span><br><span class="line">public static int tickets &#x3D; 1000;  &#x2F;&#x2F;static不能省</span><br><span class="line">public String str &#x3D; new String(&quot;恒恒恒&quot;);  &#x2F;&#x2F;static不能省</span><br><span class="line"></span><br><span class="line">public void run()&#x2F;&#x2F; 重写Thread类中的run方法，所以上两行的static不能省略。</span><br><span class="line">&#123;</span><br><span class="line">while (true)</span><br><span class="line">&#123;</span><br><span class="line">synchronized (str)&#x2F;&#x2F; 同步代码块。</span><br><span class="line">&#123;</span><br><span class="line">if (tickets &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">System.out.printf(&quot;%s线程正在卖出第%d张票\n&quot;,</span><br><span class="line">Thread.currentThread().getName(), tickets);</span><br><span class="line">--tickets;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class TestTickets_4</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">A aa1 &#x3D; new A();</span><br><span class="line">aa1.start();</span><br><span class="line">&#x2F;&#x2F; 堆中存在两个对象</span><br><span class="line">A aa2 &#x3D; new A();</span><br><span class="line">aa2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">理解：(对比例3)继承Thread类的A类new出来两个对象aa1和aa2,本该是每个对象都有一个类A的属性，但因为类A中的tickets属性是static,所以aa1和aa2共拥tickets属性，但str是非static的，所以同步代码块中的对象并不是同一个对象，因此该程序错误。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL基础查询</title>
    <link href="https://7heng.github.io/2021/03/24/MySQL%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/"/>
    <id>https://7heng.github.io/2021/03/24/MySQL%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2/</id>
    <published>2021-03-24T05:49:23.000Z</published>
    <updated>2021-03-27T11:46:20.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查询："><a href="#查询：" class="headerlink" title="查询："></a>查询：</h2><h6 id="基础查询："><a href="#基础查询：" class="headerlink" title="基础查询："></a>基础查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 要查询的内容 from 表名;</span><br></pre></td></tr></table></figure><h6 id="条件查询："><a href="#条件查询：" class="headerlink" title="条件查询："></a>条件查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select 要查询的字段|表达式|常量值|函数</span><br><span class="line"></span><br><span class="line"> from 表名</span><br><span class="line"></span><br><span class="line">where 条件;</span><br></pre></td></tr></table></figure><h6 id="模糊查询："><a href="#模糊查询：" class="headerlink" title="模糊查询："></a>模糊查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(LIKE):一般和通配符% _搭配使用。</span><br><span class="line">例：查询员工名中包含字符a的员工信息。</span><br><span class="line">SELECT  *</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">last_name like &#39;%a%&#39;;</span><br><span class="line">查询员工名中第三个字符为e,第五个字符为a的员工名和工资</span><br><span class="line">SELECT last_name,salary</span><br><span class="line">FROM employees</span><br><span class="line">WHERE last_name LIKE &#39;__e_a%&#39;;（%:任意多个字符,包含0个字符。_:任意单个字符）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(BETWEEN AND):包含两个临界值;两个临界值不能调换顺序。</span><br><span class="line">例：查询员工编号在100~200之间的员工信息</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employees_id &gt;&#x3D; 100 AND employees_id &lt;&#x3D;200;</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">SELECT *</span><br><span class="line">FROM employees</span><br><span class="line">WHERE employees_id BETWEEN 100 AND  200;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(IN):用来判断某字段的值是否属于IN列表中的某一项;IN列表的值类型必须一致或兼容;IN列表中不支持通配符。</span><br><span class="line">例：查询员工的工种编号是IT_PROG、AD_VP、AD_PRES中的一个员工名和工种编号</span><br><span class="line">SELECT last_name,job_id</span><br><span class="line">FROM emplyoees</span><br><span class="line">WHERE job_id &#x3D; &#39;IT_PROG&#39; OR jod_id &#x3D; &#39;AD_VP&#39; OR job_id &#x3D; &#39;AD_PRES&#39;;</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">job_id</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">job_id IN( &#39;IT_PROT&#39; ,&#39;AD_VP&#39;,&#39;AD_PRES&#39;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(IS NULL):&#x3D;或!&#x3D;和&lt;&gt;不能用来判断NULL值，IS NULL或IS NOT NULL可以判断NULL值。</span><br><span class="line">例：查询没有奖金的员工名和奖金率</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS NULL;</span><br><span class="line">例：查询有奖金的员工和奖金率</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct IS NOT NULL;</span><br><span class="line">----------------------------------</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE </span><br><span class="line">salary IS 12000;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">安全等于&lt;&#x3D;&gt;</span><br><span class="line">例：查询没有奖金的员工和奖金率</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">commission_pct</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE</span><br><span class="line">commission_pct &lt;&#x3D;&gt;NULL;</span><br><span class="line">例：查询工资为12000的员工信息</span><br><span class="line">SELECT</span><br><span class="line">last_name,</span><br><span class="line">salary</span><br><span class="line">FROM</span><br><span class="line">employees</span><br><span class="line">WHERE </span><br><span class="line">salary &lt;&#x3D;&gt; 12000;</span><br></pre></td></tr></table></figure><p><strong>IS NULL：仅仅可以判断NULL值，可读性较高(建议使用)。</strong></p><p><strong>&lt;=&gt;：既可以判断NULL值，又可以判断普通的数值，可读性较低。</strong></p><h6 id="排序查询："><a href="#排序查询：" class="headerlink" title="排序查询："></a>排序查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select 要查询的内容 from 表</span><br><span class="line"></span><br><span class="line">where 条件</span><br><span class="line"></span><br><span class="line">order by 排序的字段|表达式|函数|别名 asc(默认升序)或desc(降序)</span><br></pre></td></tr></table></figure><h6 id="分组查询："><a href="#分组查询：" class="headerlink" title="分组查询："></a>分组查询：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">select  分组函数，列(要求出现在GROUP BY 后面)</span><br><span class="line">form 表</span><br><span class="line">【where 筛选条件】</span><br><span class="line">group by 分组的列表</span><br><span class="line">【order by 子句】</span><br></pre></td></tr></table></figure><p>注意：查询列表必须特殊，要求是分组函数和group by 后出现的字段。</p><p><strong>特点：</strong></p><p>1：和分组函数一同查询的字段必须是group by后出现的字段。</p><p>2：筛选分为两类：分组前筛选和分组后筛选</p><p>分组前筛选：原始表</p><p>分组后筛选：group by后的结果集</p><p>group by 前用关键字where，group by后用关键字 having</p><p>分组筛选不能放在where后面。</p><p>3：分组函数做条件肯定是放在having子句中。</p><p>能用分组前筛选的，优先考虑使用分组前筛选</p><p>4：group by 子句支持单个字段分组，多个字段分组(多个字段之间用逗号隔开没有顺序要求)，表达式或函数(较少使用)。</p><p>5：也可以添加排序（排序放在整个分组查询的最后)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line">select 要查询的字段,分组函数 from 表</span><br><span class="line">where 筛选条件</span><br><span class="line">group by 分组的字段</span><br><span class="line">order by 排序的字段</span><br><span class="line"></span><br><span class="line">查询每个部门的员工个数：</span><br><span class="line">SELECT COUNT(*) FROM employees WHERE department_id &#x3D; 90;</span><br><span class="line">简单的分组：</span><br><span class="line">1：查询每个工种的员工的平均工资</span><br><span class="line">SELECT AVG(salary),job_id</span><br><span class="line">FROM emplyoees</span><br><span class="line">GROUP BY job_id;</span><br><span class="line"></span><br><span class="line">2：查询每个位置的部门个数</span><br><span class="line">SELECT COUNT(*),location_id</span><br><span class="line">FROM department</span><br><span class="line">GROUP BY location_id;</span><br><span class="line"></span><br><span class="line">3：实现分组前的筛选</span><br><span class="line">查询邮箱中包含a字符的每个部门的最高工资</span><br><span class="line">SELECT MAX(salary),manager_id</span><br><span class="line">FROM emplyoees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">GROUP BY manager_id;</span><br><span class="line"></span><br><span class="line">分组后筛选</span><br><span class="line">①：查询每个部门的员工个数</span><br><span class="line">SELECT COUNT(*),department_id</span><br><span class="line">FROM emplyoees</span><br><span class="line">GROUP BY departments_id;</span><br><span class="line"></span><br><span class="line">②：筛选①的结果，查询哪个部门的员工个数&gt;5</span><br><span class="line">SELECT COUNT(*),department_id</span><br><span class="line">FROM emplyoees</span><br><span class="line">GROUP BY department_id</span><br><span class="line">HAVING COUNT(*)&gt;5;</span><br><span class="line"></span><br><span class="line">4：每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资</span><br><span class="line">SELECT job_id,MAX(salary)</span><br><span class="line">FROM employees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">GROUP BY job_id</span><br><span class="line">HAVING MAX(salary)&gt;12000;</span><br><span class="line"></span><br><span class="line">5：领导编号&gt;102的每个领导手下的最低工资大于5000的领导编号和最低工资</span><br><span class="line">manager_id&gt;102</span><br><span class="line">SELECT manager_id,MIN(salary)</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY manager_id</span><br><span class="line">HAVING MIN(salary)&gt;5000;</span><br><span class="line"></span><br><span class="line">6.添加排序</span><br><span class="line">例：每个工种有奖金的员工的最高工资&gt;6000的工种编号和最高工资,按最高工资升序</span><br><span class="line">SELECT job_id,MAX(salary) m</span><br><span class="line">FROM employees</span><br><span class="line">WHERE commission_pct IS NOT NULL</span><br><span class="line">GROUP BY job_id</span><br><span class="line">HAVING m&gt;6000</span><br><span class="line">ORDER BY m ;</span><br><span class="line"></span><br><span class="line">7.按多个字段分组</span><br><span class="line">例：查询每个工种每个部门的最低工资,并按最低工资降序</span><br><span class="line">SELECT MIN(salary),job_id,department_id</span><br><span class="line">FROM employees</span><br><span class="line">GROUP BY department_id,job_id</span><br><span class="line">ORDER BY MIN(salary) DESC;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查询：&quot;&gt;&lt;a href=&quot;#查询：&quot; class=&quot;headerlink&quot; title=&quot;查询：&quot;&gt;&lt;/a&gt;查询：&lt;/h2&gt;&lt;h6 id=&quot;基础查询：&quot;&gt;&lt;a href=&quot;#基础查询：&quot; class=&quot;headerlink&quot; title=&quot;基础查询：&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
